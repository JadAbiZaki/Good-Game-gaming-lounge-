/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.io.IOException;

import javax.swing.ImageIcon;

/**
 *
 * @author Nader
 */

public class jFrameChessLan extends javax.swing.JFrame {

    /**
     * Creates new form jFrameChess
     */
    private boolean whoseturn=true;
    private int z[][]= new int[8][8];
    private int lastXpressed;
    private int lastYpressed;
    private int valueOfVariable=0;
    boolean multiPlayer;
    boolean white;
    String gameserverID;
    boolean yourTurn;
    public jFrameChessLan(boolean multiPlayer, boolean white, String gameserverID2) {
    	this.multiPlayer = multiPlayer;
    	this.white = white;
    	this.gameserverID = gameserverID2;
    	if(white)
    		yourTurn = true;
    	else
    		yourTurn = false;
        initComponents();
        setSize(760, 760);
        setLocationRelativeTo(null);
        for (int i = 0; i < 8; i++){
        	for(int j = 0; j < 8; j++)
        		z[i][j] = 0;
        }
        fillTable();
        drawTable();
    }

    public jFrameChessLan() {
    	initComponents();
        setSize(760, 760);
        setLocationRelativeTo(null);	
        fillTable();
        drawTable();
	}

	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jButton12 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jButton13 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jButton14 = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jButton15 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jButton16 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jButton17 = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        jButton18 = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jButton19 = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        jButton20 = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jButton21 = new javax.swing.JButton();
        jPanel23 = new javax.swing.JPanel();
        jButton22 = new javax.swing.JButton();
        jPanel24 = new javax.swing.JPanel();
        jButton23 = new javax.swing.JButton();
        jPanel25 = new javax.swing.JPanel();
        jButton24 = new javax.swing.JButton();
        jPanel26 = new javax.swing.JPanel();
        jButton25 = new javax.swing.JButton();
        jPanel27 = new javax.swing.JPanel();
        jButton26 = new javax.swing.JButton();
        jPanel28 = new javax.swing.JPanel();
        jButton27 = new javax.swing.JButton();
        jPanel29 = new javax.swing.JPanel();
        jButton28 = new javax.swing.JButton();
        jPanel30 = new javax.swing.JPanel();
        jButton29 = new javax.swing.JButton();
        jPanel31 = new javax.swing.JPanel();
        jButton30 = new javax.swing.JButton();
        jPanel32 = new javax.swing.JPanel();
        jButton31 = new javax.swing.JButton();
        jPanel33 = new javax.swing.JPanel();
        jButton32 = new javax.swing.JButton();
        jPanel34 = new javax.swing.JPanel();
        jButton33 = new javax.swing.JButton();
        jPanel35 = new javax.swing.JPanel();
        jButton34 = new javax.swing.JButton();
        jPanel36 = new javax.swing.JPanel();
        jButton35 = new javax.swing.JButton();
        jPanel37 = new javax.swing.JPanel();
        jButton36 = new javax.swing.JButton();
        jPanel38 = new javax.swing.JPanel();
        jButton37 = new javax.swing.JButton();
        jPanel39 = new javax.swing.JPanel();
        jButton38 = new javax.swing.JButton();
        jPanel40 = new javax.swing.JPanel();
        jButton39 = new javax.swing.JButton();
        jPanel41 = new javax.swing.JPanel();
        jButton40 = new javax.swing.JButton();
        jPanel42 = new javax.swing.JPanel();
        jButton41 = new javax.swing.JButton();
        jPanel43 = new javax.swing.JPanel();
        jButton42 = new javax.swing.JButton();
        jPanel44 = new javax.swing.JPanel();
        jButton43 = new javax.swing.JButton();
        jPanel45 = new javax.swing.JPanel();
        jButton44 = new javax.swing.JButton();
        jPanel46 = new javax.swing.JPanel();
        jButton45 = new javax.swing.JButton();
        jPanel47 = new javax.swing.JPanel();
        jButton46 = new javax.swing.JButton();
        jPanel48 = new javax.swing.JPanel();
        jButton47 = new javax.swing.JButton();
        jPanel49 = new javax.swing.JPanel();
        jButton48 = new javax.swing.JButton();
        jPanel50 = new javax.swing.JPanel();
        jButton49 = new javax.swing.JButton();
        jPanel51 = new javax.swing.JPanel();
        jButton50 = new javax.swing.JButton();
        jPanel52 = new javax.swing.JPanel();
        jButton51 = new javax.swing.JButton();
        jPanel53 = new javax.swing.JPanel();
        jButton52 = new javax.swing.JButton();
        jPanel54 = new javax.swing.JPanel();
        jButton53 = new javax.swing.JButton();
        jPanel55 = new javax.swing.JPanel();
        jButton54 = new javax.swing.JButton();
        jPanel56 = new javax.swing.JPanel();
        jButton55 = new javax.swing.JButton();
        jPanel57 = new javax.swing.JPanel();
        jButton56 = new javax.swing.JButton();
        jPanel58 = new javax.swing.JPanel();
        jButton57 = new javax.swing.JButton();
        jPanel59 = new javax.swing.JPanel();
        jButton58 = new javax.swing.JButton();
        jPanel60 = new javax.swing.JPanel();
        jButton59 = new javax.swing.JButton();
        jPanel61 = new javax.swing.JPanel();
        jButton60 = new javax.swing.JButton();
        jPanel62 = new javax.swing.JPanel();
        jButton61 = new javax.swing.JButton();
        jPanel63 = new javax.swing.JPanel();
        jButton62 = new javax.swing.JButton();
        jPanel64 = new javax.swing.JPanel();
        jButton63 = new javax.swing.JButton();
        jPanel65 = new javax.swing.JPanel();
        jButton64 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(8, 8));

        jPanel2.setLayout(new java.awt.BorderLayout());

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 0, 0));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 0, 0));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jPanel3.add(jButton2, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jButton3.setBackground(new java.awt.Color(102, 102, 102));
        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 0, 0));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jPanel4.add(jButton3, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel4);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 0, 0));
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jPanel5.add(jButton4, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel5);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jButton5.setBackground(new java.awt.Color(102, 102, 102));
        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 0, 0));
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jPanel6.add(jButton5, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel6);

        jPanel7.setLayout(new java.awt.BorderLayout());

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 0, 0));
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jPanel7.add(jButton6, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel7);

        jPanel8.setLayout(new java.awt.BorderLayout());

        jButton7.setBackground(new java.awt.Color(102, 102, 102));
        jButton7.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 0, 0));
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });
        jPanel8.add(jButton7, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel8);

        jPanel9.setLayout(new java.awt.BorderLayout());

        jButton8.setBackground(new java.awt.Color(255, 255, 255));
        jButton8.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 0, 0));
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });
        jPanel9.add(jButton8, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel9);

        jPanel10.setLayout(new java.awt.BorderLayout());

        jButton9.setBackground(new java.awt.Color(255, 255, 255));
        jButton9.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 0, 0));
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });
        jPanel10.add(jButton9, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel10);

        jPanel11.setLayout(new java.awt.BorderLayout());

        jButton10.setBackground(new java.awt.Color(102, 102, 102));
        jButton10.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 0, 0));
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton10MouseClicked(evt);
            }
        });
        jPanel11.add(jButton10, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel11);

        jPanel12.setLayout(new java.awt.BorderLayout());

        jButton11.setBackground(new java.awt.Color(255, 255, 255));
        jButton11.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 0, 0));
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });
        jPanel12.add(jButton11, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel12);

        jPanel13.setLayout(new java.awt.BorderLayout());

        jButton12.setBackground(new java.awt.Color(102, 102, 102));
        jButton12.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton12.setForeground(new java.awt.Color(255, 0, 0));
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton12MouseClicked(evt);
            }
        });
        jPanel13.add(jButton12, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel13);

        jPanel14.setLayout(new java.awt.BorderLayout());

        jButton13.setBackground(new java.awt.Color(255, 255, 255));
        jButton13.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton13.setForeground(new java.awt.Color(255, 0, 0));
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton13MouseClicked(evt);
            }
        });
        jPanel14.add(jButton13, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel14);

        jPanel15.setLayout(new java.awt.BorderLayout());

        jButton14.setBackground(new java.awt.Color(102, 102, 102));
        jButton14.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton14.setForeground(new java.awt.Color(255, 0, 0));
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton14MouseClicked(evt);
            }
        });
        jPanel15.add(jButton14, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel15);

        jPanel16.setLayout(new java.awt.BorderLayout());

        jButton15.setBackground(new java.awt.Color(255, 255, 255));
        jButton15.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton15.setForeground(new java.awt.Color(255, 0, 0));
        jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton15MouseClicked(evt);
            }
        });
        jPanel16.add(jButton15, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel16);

        jPanel17.setLayout(new java.awt.BorderLayout());

        jButton16.setBackground(new java.awt.Color(102, 102, 102));
        jButton16.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton16.setForeground(new java.awt.Color(255, 0, 0));
        jButton16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton16MouseClicked(evt);
            }
        });
        jPanel17.add(jButton16, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel17);

        jPanel18.setLayout(new java.awt.BorderLayout());

        jButton17.setBackground(new java.awt.Color(102, 102, 102));
        jButton17.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton17.setForeground(new java.awt.Color(255, 0, 0));
        jButton17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton17MouseClicked(evt);
            }
        });
        jPanel18.add(jButton17, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel18);

        jPanel19.setLayout(new java.awt.BorderLayout());

        jButton18.setBackground(new java.awt.Color(255, 255, 255));
        jButton18.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton18.setForeground(new java.awt.Color(255, 0, 0));
        jButton18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton18MouseClicked(evt);
            }
        });
        jPanel19.add(jButton18, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel19);

        jPanel20.setLayout(new java.awt.BorderLayout());

        jButton19.setBackground(new java.awt.Color(102, 102, 102));
        jButton19.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton19.setForeground(new java.awt.Color(255, 0, 0));
        jButton19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton19MouseClicked(evt);
            }
        });
        jPanel20.add(jButton19, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel20);

        jPanel21.setLayout(new java.awt.BorderLayout());

        jButton20.setBackground(new java.awt.Color(255, 255, 255));
        jButton20.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton20.setForeground(new java.awt.Color(255, 0, 0));
        jButton20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton20MouseClicked(evt);
            }
        });
        jPanel21.add(jButton20, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel21);

        jPanel22.setLayout(new java.awt.BorderLayout());

        jButton21.setBackground(new java.awt.Color(102, 102, 102));
        jButton21.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton21.setForeground(new java.awt.Color(255, 0, 0));
        jButton21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton21MouseClicked(evt);
            }
        });
        jPanel22.add(jButton21, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel22);

        jPanel23.setLayout(new java.awt.BorderLayout());

        jButton22.setBackground(new java.awt.Color(255, 255, 255));
        jButton22.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton22.setForeground(new java.awt.Color(255, 0, 0));
        jButton22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton22MouseClicked(evt);
            }
        });
        jPanel23.add(jButton22, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel23);

        jPanel24.setLayout(new java.awt.BorderLayout());

        jButton23.setBackground(new java.awt.Color(102, 102, 102));
        jButton23.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton23.setForeground(new java.awt.Color(255, 0, 0));
        jButton23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton23MouseClicked(evt);
            }
        });
        jPanel24.add(jButton23, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel24);

        jPanel25.setLayout(new java.awt.BorderLayout());

        jButton24.setBackground(new java.awt.Color(255, 255, 255));
        jButton24.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton24.setForeground(new java.awt.Color(255, 0, 0));
        jButton24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton24MouseClicked(evt);
            }
        });
        jPanel25.add(jButton24, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel25);

        jPanel26.setLayout(new java.awt.BorderLayout());

        jButton25.setBackground(new java.awt.Color(255, 255, 255));
        jButton25.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton25.setForeground(new java.awt.Color(255, 0, 0));
        jButton25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton25MouseClicked(evt);
            }
        });
        jPanel26.add(jButton25, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel26);

        jPanel27.setLayout(new java.awt.BorderLayout());

        jButton26.setBackground(new java.awt.Color(102, 102, 102));
        jButton26.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton26.setForeground(new java.awt.Color(255, 0, 0));
        jButton26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton26MouseClicked(evt);
            }
        });
        jPanel27.add(jButton26, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel27);

        jPanel28.setLayout(new java.awt.BorderLayout());

        jButton27.setBackground(new java.awt.Color(255, 255, 255));
        jButton27.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton27.setForeground(new java.awt.Color(255, 0, 0));
        jButton27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton27MouseClicked(evt);
            }
        });
        jPanel28.add(jButton27, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel28);

        jPanel29.setLayout(new java.awt.BorderLayout());

        jButton28.setBackground(new java.awt.Color(102, 102, 102));
        jButton28.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton28.setForeground(new java.awt.Color(255, 0, 0));
        jButton28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton28MouseClicked(evt);
            }
        });
        jPanel29.add(jButton28, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel29);

        jPanel30.setLayout(new java.awt.BorderLayout());

        jButton29.setBackground(new java.awt.Color(255, 255, 255));
        jButton29.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton29.setForeground(new java.awt.Color(255, 0, 0));
        jButton29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton29MouseClicked(evt);
            }
        });
        jPanel30.add(jButton29, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel30);

        jPanel31.setLayout(new java.awt.BorderLayout());

        jButton30.setBackground(new java.awt.Color(102, 102, 102));
        jButton30.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton30.setForeground(new java.awt.Color(255, 0, 0));
        jButton30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton30MouseClicked(evt);
            }
        });
        jPanel31.add(jButton30, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel31);

        jPanel32.setLayout(new java.awt.BorderLayout());

        jButton31.setBackground(new java.awt.Color(255, 255, 255));
        jButton31.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton31.setForeground(new java.awt.Color(255, 0, 0));
        jButton31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton31MouseClicked(evt);
            }
        });
        jPanel32.add(jButton31, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel32);

        jPanel33.setLayout(new java.awt.BorderLayout());

        jButton32.setBackground(new java.awt.Color(102, 102, 102));
        jButton32.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton32.setForeground(new java.awt.Color(255, 0, 0));
        jButton32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton32MouseClicked(evt);
            }
        });
        jPanel33.add(jButton32, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel33);

        jPanel34.setLayout(new java.awt.BorderLayout());

        jButton33.setBackground(new java.awt.Color(102, 102, 102));
        jButton33.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton33.setForeground(new java.awt.Color(255, 0, 0));
        jButton33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton33MouseClicked(evt);
            }
        });
        jPanel34.add(jButton33, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel34);

        jPanel35.setLayout(new java.awt.BorderLayout());

        jButton34.setBackground(new java.awt.Color(255, 255, 255));
        jButton34.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton34.setForeground(new java.awt.Color(255, 0, 0));
        jButton34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton34MouseClicked(evt);
            }
        });
        jPanel35.add(jButton34, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel35);

        jPanel36.setLayout(new java.awt.BorderLayout());

        jButton35.setBackground(new java.awt.Color(102, 102, 102));
        jButton35.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton35.setForeground(new java.awt.Color(255, 0, 0));
        jButton35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton35MouseClicked(evt);
            }
        });
        jPanel36.add(jButton35, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel36);

        jPanel37.setLayout(new java.awt.BorderLayout());

        jButton36.setBackground(new java.awt.Color(255, 255, 255));
        jButton36.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton36.setForeground(new java.awt.Color(255, 0, 0));
        jButton36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton36MouseClicked(evt);
            }
        });
        jPanel37.add(jButton36, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel37);

        jPanel38.setLayout(new java.awt.BorderLayout());

        jButton37.setBackground(new java.awt.Color(102, 102, 102));
        jButton37.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton37.setForeground(new java.awt.Color(255, 0, 0));
        jButton37.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton37MouseClicked(evt);
            }
        });
        jPanel38.add(jButton37, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel38);

        jPanel39.setLayout(new java.awt.BorderLayout());

        jButton38.setBackground(new java.awt.Color(255, 255, 255));
        jButton38.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton38.setForeground(new java.awt.Color(255, 0, 0));
        jButton38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton38MouseClicked(evt);
            }
        });
        jPanel39.add(jButton38, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel39);

        jPanel40.setLayout(new java.awt.BorderLayout());

        jButton39.setBackground(new java.awt.Color(102, 102, 102));
        jButton39.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton39.setForeground(new java.awt.Color(255, 0, 0));
        jButton39.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton39MouseClicked(evt);
            }
        });
        jPanel40.add(jButton39, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel40);

        jPanel41.setLayout(new java.awt.BorderLayout());

        jButton40.setBackground(new java.awt.Color(255, 255, 255));
        jButton40.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton40.setForeground(new java.awt.Color(255, 0, 0));
        jButton40.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton40MouseClicked(evt);
            }
        });
        jPanel41.add(jButton40, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel41);

        jPanel42.setLayout(new java.awt.BorderLayout());

        jButton41.setBackground(new java.awt.Color(255, 255, 255));
        jButton41.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton41.setForeground(new java.awt.Color(255, 0, 0));
        jButton41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton41MouseClicked(evt);
            }
        });
        jPanel42.add(jButton41, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel42);

        jPanel43.setLayout(new java.awt.BorderLayout());

        jButton42.setBackground(new java.awt.Color(102, 102, 102));
        jButton42.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton42.setForeground(new java.awt.Color(255, 0, 0));
        jButton42.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton42MouseClicked(evt);
            }
        });
        jPanel43.add(jButton42, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel43);

        jPanel44.setLayout(new java.awt.BorderLayout());

        jButton43.setBackground(new java.awt.Color(255, 255, 255));
        jButton43.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton43.setForeground(new java.awt.Color(255, 0, 0));
        jButton43.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton43MouseClicked(evt);
            }
        });
        jPanel44.add(jButton43, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel44);

        jPanel45.setLayout(new java.awt.BorderLayout());

        jButton44.setBackground(new java.awt.Color(102, 102, 102));
        jButton44.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton44.setForeground(new java.awt.Color(255, 0, 0));
        jButton44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton44MouseClicked(evt);
            }
        });
        jPanel45.add(jButton44, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel45);

        jPanel46.setLayout(new java.awt.BorderLayout());

        jButton45.setBackground(new java.awt.Color(255, 255, 255));
        jButton45.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton45.setForeground(new java.awt.Color(255, 0, 0));
        jButton45.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton45MouseClicked(evt);
            }
        });
        jPanel46.add(jButton45, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel46);

        jPanel47.setLayout(new java.awt.BorderLayout());

        jButton46.setBackground(new java.awt.Color(102, 102, 102));
        jButton46.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton46.setForeground(new java.awt.Color(255, 0, 0));
        jButton46.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton46MouseClicked(evt);
            }
        });
        jPanel47.add(jButton46, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel47);

        jPanel48.setLayout(new java.awt.BorderLayout());

        jButton47.setBackground(new java.awt.Color(255, 255, 255));
        jButton47.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton47.setForeground(new java.awt.Color(255, 0, 0));
        jButton47.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton47MouseClicked(evt);
            }
        });
        jPanel48.add(jButton47, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel48);

        jPanel49.setLayout(new java.awt.BorderLayout());

        jButton48.setBackground(new java.awt.Color(102, 102, 102));
        jButton48.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton48.setForeground(new java.awt.Color(255, 0, 0));
        jButton48.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton48MouseClicked(evt);
            }
        });
        jPanel49.add(jButton48, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel49);

        jPanel50.setLayout(new java.awt.BorderLayout());

        jButton49.setBackground(new java.awt.Color(102, 102, 102));
        jButton49.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton49.setForeground(new java.awt.Color(255, 0, 0));
        jButton49.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton49MouseClicked(evt);
            }
        });
        jPanel50.add(jButton49, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel50);

        jPanel51.setLayout(new java.awt.BorderLayout());

        jButton50.setBackground(new java.awt.Color(255, 255, 255));
        jButton50.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton50.setForeground(new java.awt.Color(255, 0, 0));
        jButton50.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton50MouseClicked(evt);
            }
        });
        jPanel51.add(jButton50, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel51);

        jPanel52.setLayout(new java.awt.BorderLayout());

        jButton51.setBackground(new java.awt.Color(102, 102, 102));
        jButton51.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton51.setForeground(new java.awt.Color(255, 0, 0));
        jButton51.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton51MouseClicked(evt);
            }
        });
        jPanel52.add(jButton51, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel52);

        jPanel53.setLayout(new java.awt.BorderLayout());

        jButton52.setBackground(new java.awt.Color(255, 255, 255));
        jButton52.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton52.setForeground(new java.awt.Color(255, 0, 0));
        jButton52.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton52MouseClicked(evt);
            }
        });
        jPanel53.add(jButton52, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel53);

        jPanel54.setLayout(new java.awt.BorderLayout());

        jButton53.setBackground(new java.awt.Color(102, 102, 102));
        jButton53.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton53.setForeground(new java.awt.Color(255, 0, 0));
        jButton53.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton53MouseClicked(evt);
            }
        });
        jPanel54.add(jButton53, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel54);

        jPanel55.setLayout(new java.awt.BorderLayout());

        jButton54.setBackground(new java.awt.Color(255, 255, 255));
        jButton54.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton54.setForeground(new java.awt.Color(255, 0, 0));
        jButton54.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton54MouseClicked(evt);
            }
        });
        jPanel55.add(jButton54, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel55);

        jPanel56.setLayout(new java.awt.BorderLayout());

        jButton55.setBackground(new java.awt.Color(102, 102, 102));
        jButton55.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton55.setForeground(new java.awt.Color(255, 0, 0));
        jButton55.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton55MouseClicked(evt);
            }
        });
        jPanel56.add(jButton55, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel56);

        jPanel57.setLayout(new java.awt.BorderLayout());

        jButton56.setBackground(new java.awt.Color(255, 255, 255));
        jButton56.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton56.setForeground(new java.awt.Color(255, 0, 0));
        jButton56.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton56MouseClicked(evt);
            }
        });
        jPanel57.add(jButton56, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel57);

        jPanel58.setLayout(new java.awt.BorderLayout());

        jButton57.setBackground(new java.awt.Color(255, 255, 255));
        jButton57.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton57.setForeground(new java.awt.Color(255, 0, 0));
        jButton57.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton57MouseClicked(evt);
            }
        });
        jPanel58.add(jButton57, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel58);

        jPanel59.setLayout(new java.awt.BorderLayout());

        jButton58.setBackground(new java.awt.Color(102, 102, 102));
        jButton58.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton58.setForeground(new java.awt.Color(255, 0, 0));
        jButton58.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton58MouseClicked(evt);
            }
        });
        jPanel59.add(jButton58, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel59);

        jPanel60.setLayout(new java.awt.BorderLayout());

        jButton59.setBackground(new java.awt.Color(255, 255, 255));
        jButton59.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton59.setForeground(new java.awt.Color(255, 0, 0));
        jButton59.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton59MouseClicked(evt);
            }
        });
        jPanel60.add(jButton59, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel60);

        jPanel61.setLayout(new java.awt.BorderLayout());

        jButton60.setBackground(new java.awt.Color(102, 102, 102));
        jButton60.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton60.setForeground(new java.awt.Color(255, 0, 0));
        jButton60.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton60MouseClicked(evt);
            }
        });
        jPanel61.add(jButton60, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel61);

        jPanel62.setLayout(new java.awt.BorderLayout());

        jButton61.setBackground(new java.awt.Color(255, 255, 255));
        jButton61.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton61.setForeground(new java.awt.Color(255, 0, 0));
        jButton61.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton61MouseClicked(evt);
            }
        });
        jPanel62.add(jButton61, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel62);

        jPanel63.setLayout(new java.awt.BorderLayout());

        jButton62.setBackground(new java.awt.Color(102, 102, 102));
        jButton62.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton62.setForeground(new java.awt.Color(255, 0, 0));
        jButton62.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton62MouseClicked(evt);
            }
        });
        jPanel63.add(jButton62, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel63);

        jPanel64.setLayout(new java.awt.BorderLayout());

        jButton63.setBackground(new java.awt.Color(255, 255, 255));
        jButton63.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton63.setForeground(new java.awt.Color(255, 0, 0));
        jButton63.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton63MouseClicked(evt);
            }
        });
        jPanel64.add(jButton63, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel64);

        jPanel65.setLayout(new java.awt.BorderLayout());

        jButton64.setBackground(new java.awt.Color(102, 102, 102));
        jButton64.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton64.setForeground(new java.awt.Color(255, 0, 0));
        jButton64.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton64MouseClicked(evt);
            }
        });
        jPanel65.add(jButton64, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel65);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>         
    
    public void receiveMove(String oldx, String oldy, String newx, String newy, String piece){
    	int lastx = Integer.parseInt(oldx);
    	int lasty = Integer.parseInt(oldy);
    	int intnewx = Integer.parseInt(newx);
    	int intnewy = Integer.parseInt(newy);
    	int intPiece = Integer.parseInt(piece);
    	z[lastx][lasty] = 0;
    	z[intnewx][intnewy] = intPiece;
    	drawTable();
    	yourTurn = true;
    	changeTurn();
    }
    
    public void sendToServer(int lastXpressed2, int lastYpressed2, int valueOfCurrentX, int valueOfCurrentY, int valueOfVariable2){   	
    	String one = Integer.toString(lastXpressed2);
    	String two = Integer.toString(lastYpressed2);
    	String three = Integer.toString(valueOfCurrentX);
    	String four = Integer.toString(valueOfCurrentY);
    	String five = Integer.toString(valueOfVariable2);   	    	
    	try {
			MyFrame.dataout.writeBytes("chess " + this.gameserverID + " " + MyFrame.currentUser + " " + one + " " + two + " " + three + " " + four + " " + five+ "\n");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	yourTurn = false;
    		
    }
   
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {   
    	
    	if(yourTurn){
    		
        int n=z[0][0];
        {
        int valueOfCurrentX=0;
        int valueOfCurrentY=0;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
        	System.out.println(yourTurn);
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==1){
                    z[valueOfCurrentX][valueOfCurrentY]=20;
                }if(n==50||n==-50){
                	//joptionpane
                    fillTable();    
                }
                if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();
                valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                     

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {    
    	if(yourTurn){
         int n=z[0][1];
         {
        int valueOfCurrentX=0;
        int valueOfCurrentY=1;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); 
                z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==1){
                    z[valueOfCurrentX][valueOfCurrentY]=20;
                }if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
         }
    	}
    }                                     

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {  
    	if(yourTurn){
        int n=z[0][2];
        {
        int valueOfCurrentX=0;
        int valueOfCurrentY=2;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==1){
                    z[valueOfCurrentX][valueOfCurrentY]=20;
                }if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;  
            }else valueOfVariable=0;
        }
    	}
    }                                     

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) { 
    	if(yourTurn){
        int n=z[0][3];
        {
        int valueOfCurrentX=0;
        int valueOfCurrentY=3;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==1){
                    z[valueOfCurrentX][valueOfCurrentY]=20;
                }if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
        }                            
    }

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) { 
    	if(yourTurn){
        int n=z[0][4];
        {
        int valueOfCurrentX=0;
        int valueOfCurrentY=4;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==1){
                    z[valueOfCurrentX][valueOfCurrentY]=20;
                }if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
        }
    }

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {   
    	if(yourTurn){
        int n=z[0][5];
        {
        int valueOfCurrentX=0;
        int valueOfCurrentY=5;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==1){
                    z[valueOfCurrentX][valueOfCurrentY]=20;
                }if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}                                     
    }

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) { 
    	if(yourTurn){
        int n=z[0][6];
        {
        int valueOfCurrentX=0;
        int valueOfCurrentY=6;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==1){
                    z[valueOfCurrentX][valueOfCurrentY]=20;
                }if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
          }
    	}
    }                                     

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {         
    	if(yourTurn){
    	int n=z[0][7];
        {
        int valueOfCurrentX=0;
        int valueOfCurrentY=7;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==1){
                    z[valueOfCurrentX][valueOfCurrentY]=20;
                }if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
         }
    	}
    }                                     

    private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {   
    	if(yourTurn){
        int n=z[1][0];
        {
        int valueOfCurrentX=1;
        int valueOfCurrentY=0;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                     

    private void jButton10MouseClicked(java.awt.event.MouseEvent evt) {
    	if(yourTurn){
        int n=z[1][1];
        {
        int valueOfCurrentX=1;
        int valueOfCurrentY=1;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {     
    	if(yourTurn){
         int n=z[1][2];
         {
        int valueOfCurrentX=1;
        int valueOfCurrentY=2;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
                changeTurn();z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
         }
    	}
    }                                      

    private void jButton12MouseClicked(java.awt.event.MouseEvent evt) { 
    	if(yourTurn){
        int n=z[1][3];
        {
        int valueOfCurrentX=1;
        int valueOfCurrentY=3;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton13MouseClicked(java.awt.event.MouseEvent evt) {    
    	if(yourTurn){
         int n=z[1][4];
         {
        int valueOfCurrentX=1;
        int valueOfCurrentY=4;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
         }
    	}
    }                                      

    private void jButton14MouseClicked(java.awt.event.MouseEvent evt) {      
    	if(yourTurn){
        int n=z[1][5];
        {
        int valueOfCurrentX=1;
        int valueOfCurrentY=5;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton15MouseClicked(java.awt.event.MouseEvent evt) {        
    	if(yourTurn){
         int n=z[1][6];
         {
        int valueOfCurrentX=1;
        int valueOfCurrentY=6;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
         }
    	}
    }                                      

    private void jButton16MouseClicked(java.awt.event.MouseEvent evt) {    
    	if(yourTurn){
         int n=z[1][7];
         {
        int valueOfCurrentX=1;
        int valueOfCurrentY=7;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
         }
    	}
    }                                      

    private void jButton17MouseClicked(java.awt.event.MouseEvent evt) {  
    	if(yourTurn){
        int n=z[2][0];
        {
        int valueOfCurrentX=2;
        int valueOfCurrentY=0;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton18MouseClicked(java.awt.event.MouseEvent evt) { 
    	if(yourTurn){
       int n=z[2][1];
       {
        int valueOfCurrentX=2;
        int valueOfCurrentY=1;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
       }
    	}
    }                                      

    private void jButton19MouseClicked(java.awt.event.MouseEvent evt) {   
    	if(yourTurn){
         int n=z[2][2];
         {
        int valueOfCurrentX=2;
        int valueOfCurrentY=2;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
         }
    	}
    }                                      

    private void jButton20MouseClicked(java.awt.event.MouseEvent evt) {      
    	if(yourTurn){
        int n=z[2][3];
        {
        int valueOfCurrentX=2;
        int valueOfCurrentY=3;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
             changeTurn();   z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton21MouseClicked(java.awt.event.MouseEvent evt) { 
    	if(yourTurn){
         int n=z[2][4];
         {
        int valueOfCurrentX=2;
        int valueOfCurrentY=4;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
         }
    	}
    }                                      

    private void jButton22MouseClicked(java.awt.event.MouseEvent evt) {      
    	if(yourTurn){
        int n=z[2][5];
        {
        int valueOfCurrentX=2;
        int valueOfCurrentY=5;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton23MouseClicked(java.awt.event.MouseEvent evt) {         
    	if(yourTurn){
        int n=z[2][6];
        {
        int valueOfCurrentX=2;
        int valueOfCurrentY=6;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton24MouseClicked(java.awt.event.MouseEvent evt) {    
    	if(yourTurn){
        int n=z[2][7];
        {
        int valueOfCurrentX=2;
        int valueOfCurrentY=7;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton25MouseClicked(java.awt.event.MouseEvent evt) {  
    	if(yourTurn){
         int n=z[3][0];
         {
        int valueOfCurrentX=3;
        int valueOfCurrentY=0;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
         }
    	}
    }                                      

    private void jButton26MouseClicked(java.awt.event.MouseEvent evt) {    
    	if(yourTurn){
        int n=z[3][1];
        {
        int valueOfCurrentX=3;
        int valueOfCurrentY=1;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton27MouseClicked(java.awt.event.MouseEvent evt) {              
    	if(yourTurn){
      int n=z[3][2];
      {
        int valueOfCurrentX=3;
        int valueOfCurrentY=2;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
      }
    	}
    }                                      

    private void jButton28MouseClicked(java.awt.event.MouseEvent evt) {   
    	if(yourTurn){
        int n=z[3][3];
        {
        int valueOfCurrentX=3;
        int valueOfCurrentY=3;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton29MouseClicked(java.awt.event.MouseEvent evt) { 
    	if(yourTurn){
        int n=z[3][4];
        {
        int valueOfCurrentX=3;
        int valueOfCurrentY=4;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
                changeTurn();z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton30MouseClicked(java.awt.event.MouseEvent evt) {    
    	if(yourTurn){
        int n=z[3][5];
        {
        int valueOfCurrentX=3;
        int valueOfCurrentY=5;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton31MouseClicked(java.awt.event.MouseEvent evt) { 
    	if(yourTurn){
        int n=z[3][6];
        {
        int valueOfCurrentX=3;
        int valueOfCurrentY=6;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
                changeTurn();z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton32MouseClicked(java.awt.event.MouseEvent evt) {   
    	if(yourTurn){
       int n=z[4][7];
       {
        int valueOfCurrentX=3;
        int valueOfCurrentY=7;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
                changeTurn();z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
       }
    	}
    }                                      

    private void jButton33MouseClicked(java.awt.event.MouseEvent evt) {           
    	if(yourTurn){
        int n=z[4][0];
        {
        int valueOfCurrentX=4;
        int valueOfCurrentY=0;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
                changeTurn();z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton34MouseClicked(java.awt.event.MouseEvent evt) {    
    	if(yourTurn){
       int n=z[4][1];
       {
        int valueOfCurrentX=4;
        int valueOfCurrentY=1;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
       }
    	}
    }                                      

    private void jButton35MouseClicked(java.awt.event.MouseEvent evt) {   
    	if(yourTurn){
       int n=z[4][2];
       {
        int valueOfCurrentX=4;
        int valueOfCurrentY=2;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
       }
    }                                      
    }

    private void jButton36MouseClicked(java.awt.event.MouseEvent evt) {     
    	if(yourTurn){
        int n=z[4][3];
        {
        int valueOfCurrentX=4;
        int valueOfCurrentY=3;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;

        }}
    }                                      

    private void jButton37MouseClicked(java.awt.event.MouseEvent evt) {  
    	if(yourTurn){
        int n=z[4][4];
        {
        int valueOfCurrentX=4;
        int valueOfCurrentY=4;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton38MouseClicked(java.awt.event.MouseEvent evt) {   
    	if(yourTurn){
        int n=z[4][5];
        {
        int valueOfCurrentX=4;
        int valueOfCurrentY=5;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton39MouseClicked(java.awt.event.MouseEvent evt) {        
    	if(yourTurn){
       int n=z[4][6];
       {
        int valueOfCurrentX=4;
        int valueOfCurrentY=6;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
       }
    	}
    }                                      

    private void jButton40MouseClicked(java.awt.event.MouseEvent evt) {    
    	if(yourTurn){
        int n=z[4][7];
        {
        int valueOfCurrentX=4;
        int valueOfCurrentY=7;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton41MouseClicked(java.awt.event.MouseEvent evt) {   
    	if(yourTurn){                                    
    
        int n=z[5][0];
        {
        int valueOfCurrentX=5;
        int valueOfCurrentY=0;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    	}
    }                                      

    private void jButton42MouseClicked(java.awt.event.MouseEvent evt) {   
    	if(yourTurn){
        int n=z[5][1];
        {
        int valueOfCurrentX=5;
        int valueOfCurrentY=1;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    }                                      
    }

    private void jButton43MouseClicked(java.awt.event.MouseEvent evt) {                
    	if(yourTurn){
       int n=z[5][2];
       {
        int valueOfCurrentX=5;
        int valueOfCurrentY=2;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
       }
    }                                      
    }
    private void jButton44MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[5][3];
        {
        int valueOfCurrentX=5;
        int valueOfCurrentY=3;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    }                                      
    }
    private void jButton45MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[5][4];
        {
        int valueOfCurrentX=5;
        int valueOfCurrentY=4;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    }                                      

    }
    private void jButton46MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[5][5];
      {
        int valueOfCurrentX=5;
        int valueOfCurrentY=5;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
      }
    }                                      
    }
    private void jButton47MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[5][6];
        if(valueOfVariable==0){
        int valueOfCurrentX=5;
        int valueOfCurrentY=6;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    }                                      
    }
    private void jButton48MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[5][7];
        {
        int valueOfCurrentX=5;
        int valueOfCurrentY=7;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
                changeTurn();z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    }
    }                      

    private void jButton49MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[6][0];
       {{
        int valueOfCurrentX=6;
        int valueOfCurrentY=0;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
       }
    }                                      
    }
    private void jButton50MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[6][1];
        {
        int valueOfCurrentX=6;
        int valueOfCurrentY=1;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
                changeTurn();z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    }                                      
    }
    private void jButton51MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[6][2];
         {
        int valueOfCurrentX=6;
        int valueOfCurrentY=2;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
         }
    }                                      
    }
    private void jButton52MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[6][3];
        {
        int valueOfCurrentX=6;
        int valueOfCurrentY=3;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
               changeTurn(); z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        } 
    }                                      
    }
    private void jButton53MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[6][4];
         {
        int valueOfCurrentX=6;
        int valueOfCurrentY=4;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
                changeTurn();z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
         }
    }                                      
    }
    private void jButton54MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[6][5];
        {
        int valueOfCurrentX=6;
        int valueOfCurrentY=5;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
                changeTurn();z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    }                                      
    }
    private void jButton55MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[6][6];
         {
        int valueOfCurrentX=6;
        int valueOfCurrentY=6;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
             changeTurn();   z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
               if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
               drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
         }
    }                                      
    }
    private void jButton56MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[6][7];
        {
        int valueOfCurrentX=6;
        int valueOfCurrentY=7;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
             changeTurn();   z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
         }
    }                                      
    }
    private void jButton57MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[7][0];
        {
        int valueOfCurrentX=7;
        int valueOfCurrentY=0;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==-1){
                    z[valueOfCurrentX][valueOfCurrentY]=-20;
                }
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
                }else valueOfVariable=0;
        }
    }                                      
    }
    private void jButton58MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[7][1];
        {
        int valueOfCurrentX=7;
        int valueOfCurrentY=1;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
            changeTurn();    z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==-1){
                    z[valueOfCurrentX][valueOfCurrentY]=-20;
                }
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    }                                      
    }
    private void jButton59MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[7][2];
         {
        int valueOfCurrentX=7;
        int valueOfCurrentY=2;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
             changeTurn();   z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==-1){
                    z[valueOfCurrentX][valueOfCurrentY]=-20;
                }
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
         }
    }                                      
    }
    private void jButton60MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[7][3];
          {
        int valueOfCurrentX=7;
        int valueOfCurrentY=3;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
            changeTurn();    z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==-1){
                    z[valueOfCurrentX][valueOfCurrentY]=-20;
                }
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
          }
    }                                      
    }
    private void jButton61MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[7][4];
       {
        int valueOfCurrentX=7;
        int valueOfCurrentY=4;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==-1){
                    z[valueOfCurrentX][valueOfCurrentY]=-20;
                }
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
       }
    }                                      
    }
    private void jButton62MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[7][5];
        {
        int valueOfCurrentX=7;
        int valueOfCurrentY=5;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
              changeTurn();  z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==-1){
                    z[valueOfCurrentX][valueOfCurrentY]=-20;
                }
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
    }
    }                                      
    }
    private void jButton63MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[7][6];
      {
        int valueOfCurrentX=7;
        int valueOfCurrentY=6;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
            changeTurn();   
            z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==-1){
                    z[valueOfCurrentX][valueOfCurrentY]=-20;
                }
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
        }
    }                
    }

    private void jButton64MouseClicked(java.awt.event.MouseEvent evt) {                                       
    	if(yourTurn){
    	int n=z[7][7];
      {
        int valueOfCurrentX=7;
        int valueOfCurrentY=7;
        if(valueOfVariable==0){
            valueOfVariable=n;
            lastXpressed = valueOfCurrentX;
            lastYpressed = valueOfCurrentY;
        }else if(checkMove(valueOfCurrentX,valueOfCurrentY,lastXpressed, lastYpressed,valueOfVariable)){
                changeTurn();
                z[lastXpressed][lastYpressed]=0;
                z[valueOfCurrentX][valueOfCurrentY]=valueOfVariable;
                if(z[valueOfCurrentX][valueOfCurrentY]==-1){
                    z[valueOfCurrentX][valueOfCurrentY]=-20;
                }
                if(n==50||n==-50){
                    fillTable();    
                } if(multiPlayer)
                	sendToServer(lastXpressed,lastYpressed,valueOfCurrentX,valueOfCurrentY,valueOfVariable);
                drawTable();valueOfVariable=0;
            }else valueOfVariable=0;
      }
    }                                      
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
       
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton48;
    private javax.swing.JButton jButton49;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton50;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton55;
    private javax.swing.JButton jButton56;
    private javax.swing.JButton jButton57;
    private javax.swing.JButton jButton58;
    private javax.swing.JButton jButton59;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton60;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton62;
    private javax.swing.JButton jButton63;
    private javax.swing.JButton jButton64;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel50;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JPanel jPanel53;
    private javax.swing.JPanel jPanel54;
    private javax.swing.JPanel jPanel55;
    private javax.swing.JPanel jPanel56;
    private javax.swing.JPanel jPanel57;
    private javax.swing.JPanel jPanel58;
    private javax.swing.JPanel jPanel59;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel60;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel62;
    private javax.swing.JPanel jPanel63;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JPanel jPanel65;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    // End of variables declaration                   

    private void fillTable() {
       for(int i=0;i<8;i++){
           z[6][i]=1;
           z[1][i]=-1;
       }
       z[0][0]=-10;z[0][1]=-8;z[0][2]=-6;z[0][3]=-50;z[0][4]=-20;z[0][5]=-6;z[0][6]=-8;z[0][7]=-10;
       z[7][0]=10;z[7][1]=8;z[7][2]=6;z[7][3]=50;z[7][4]=20;z[7][5]=6;z[7][6]=8;z[7][7]=10;
         
    }
    private void StringAnalysis(String x , String y , String x1 , String y1){
        int i1,i2,j1,j2;
        i1=Integer.parseInt(x);
        i2=Integer.parseInt(x1);
        j1=Integer.parseInt(y);
        j2=Integer.parseInt(y1);
        int n = z[i1][j1];
        z[i1][j1]=0;
        z[i2][j2]=n;
        whoseturn=true;
        drawTable();
        
    }
    private void drawTable(){
       
        ImageIcon BlackBishop = new ImageIcon(getClass().getResource("/Resources/Bishop Filled.png"));
        ImageIcon WhiteBishop = new ImageIcon(getClass().getResource("/Resources/Bishop.png"));
        ImageIcon BlackKnight = new ImageIcon(getClass().getResource("/Resources/Knight Filled.png"));
        ImageIcon WhiteKnight = new ImageIcon(getClass().getResource("/Resources/Knight.png"));
        ImageIcon BlackRook = new ImageIcon(getClass().getResource("/Resources/Rook Filled.png"));
        ImageIcon WhiteRook = new ImageIcon(getClass().getResource("/Resources/Rook.png"));
        ImageIcon BlackKing = new ImageIcon(getClass().getResource("/Resources/King Filled.png"));
        ImageIcon WhiteKing = new ImageIcon(getClass().getResource("/Resources/King.png"));
        ImageIcon BlackQueen  = new ImageIcon(getClass().getResource("/Resources/Queen Filled.png"));
        ImageIcon WhiteQueen = new ImageIcon(getClass().getResource("/Resources/Queen.png"));
        ImageIcon BlackPawn = new ImageIcon(getClass().getResource("/Resources/Pawn Filled.png"));
        ImageIcon WhitePawn = new ImageIcon(getClass().getResource("/Resources/Pawn.png"));
        jButton1.setIcon(null);jButton2.setIcon(null);jButton3.setIcon(null);jButton4.setIcon(null);
        jButton5.setIcon(null);jButton6.setIcon(null);jButton7.setIcon(null);jButton8.setIcon(null);
        jButton9.setIcon(null);jButton10.setIcon(null);jButton11.setIcon(null);jButton12.setIcon(null);
        jButton13.setIcon(null);jButton14.setIcon(null);jButton15.setIcon(null);jButton16.setIcon(null);
        jButton17.setIcon(null);jButton18.setIcon(null);jButton19.setIcon(null);jButton20.setIcon(null);
        jButton21.setIcon(null);jButton22.setIcon(null);jButton23.setIcon(null);jButton24.setIcon(null);
        jButton25.setIcon(null);jButton26.setIcon(null);jButton27.setIcon(null);jButton28.setIcon(null);
        jButton29.setIcon(null);jButton30.setIcon(null);jButton31.setIcon(null);jButton32.setIcon(null);
        jButton33.setIcon(null);jButton34.setIcon(null);jButton35.setIcon(null);jButton36.setIcon(null);
        jButton37.setIcon(null);jButton38.setIcon(null);jButton39.setIcon(null);jButton40.setIcon(null);
        jButton41.setIcon(null);jButton42.setIcon(null);jButton43.setIcon(null);jButton44.setIcon(null);
        jButton45.setIcon(null);jButton46.setIcon(null);jButton47.setIcon(null);jButton48.setIcon(null);
        jButton49.setIcon(null);jButton50.setIcon(null);jButton51.setIcon(null);jButton52.setIcon(null);
        jButton53.setIcon(null);jButton54.setIcon(null);jButton55.setIcon(null);jButton56.setIcon(null);
        jButton57.setIcon(null);jButton58.setIcon(null);jButton59.setIcon(null);jButton60.setIcon(null);
        jButton61.setIcon(null);jButton62.setIcon(null);jButton63.setIcon(null);jButton64.setIcon(null);
        int n=z[0][0];
        if(n==1){
               jButton1.setIcon(WhitePawn);
        }else if(n==6){    
               jButton1.setIcon(WhiteBishop);
        }else if(n==8){
               jButton1.setIcon(WhiteKnight);
        }else if(n==20){
               jButton1.setIcon(WhiteQueen);
        }else if(n==10){
               jButton1.setIcon(WhiteRook);     
        }else if(n==50){
            jButton1.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton1.setIcon(BlackPawn);
        }else if(n==-6){
            jButton1.setIcon(BlackBishop);
        }else if(n==-8){
            jButton1.setIcon(BlackKnight);
        }else if(n==-10){
            jButton1.setIcon(BlackRook);
        }else if(n==-20){
            jButton1.setIcon(BlackQueen);
        }else if(n==-50){
            jButton1.setIcon(BlackKing);
        }
        n=z[0][1];
            if(n==1){
               jButton2.setIcon(WhitePawn);
        }else if(n==6){    
               jButton2.setIcon(WhiteBishop);
        }else if(n==8){
               jButton2.setIcon(WhiteKnight);
        }else if(n==20){
               jButton2.setIcon(WhiteQueen);
        }else if(n==10){
               jButton2.setIcon(WhiteRook);     
        }else if(n==50){
            jButton2.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton2.setIcon(BlackPawn);
        }else if(n==-6){
            jButton2.setIcon(BlackBishop);
        }else if(n==-8){
            jButton2.setIcon(BlackKnight);
        }else if(n==-10){
            jButton2.setIcon(BlackRook);
        }else if(n==-20){
            jButton2.setIcon(BlackQueen);
        }else if(n==-50){
            jButton2.setIcon(BlackKing);
        }   
        n=z[0][2];
         if(n==1){
               jButton3.setIcon(WhitePawn);
        }else if(n==6){    
               jButton3.setIcon(WhiteBishop);
        }else if(n==8){
               jButton3.setIcon(WhiteKnight);
        }else if(n==20){
               jButton3.setIcon(WhiteQueen);
        }else if(n==10){
               jButton3.setIcon(WhiteRook);     
        }else if(n==50){
            jButton3.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton3.setIcon(BlackPawn);
        }else if(n==-6){
            jButton3.setIcon(BlackBishop);
        }else if(n==-8){
            jButton3.setIcon(BlackKnight);
        }else if(n==-10){
            jButton3.setIcon(BlackRook);
        }else if(n==-20){
            jButton3.setIcon(BlackQueen);
        }else if(n==-50){
            jButton3.setIcon(BlackKing);
        }
         n=z[0][3];
          if(n==1){
               jButton4.setIcon(WhitePawn);
        }else if(n==6){    
               jButton4.setIcon(WhiteBishop);
        }else if(n==8){
               jButton4.setIcon(WhiteKnight);
        }else if(n==20){
               jButton4.setIcon(WhiteQueen);
        }else if(n==10){
               jButton4.setIcon(WhiteRook);     
        }else if(n==50){
            jButton4.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton4.setIcon(BlackPawn);
        }else if(n==-6){
            jButton4.setIcon(BlackBishop);
        }else if(n==-8){
            jButton4.setIcon(BlackKnight);
        }else if(n==-10){
            jButton4.setIcon(BlackRook);
        }else if(n==-20){
            jButton4.setIcon(BlackQueen);
        }else if(n==-50){
            jButton4.setIcon(BlackKing);
        }
          n=z[0][4];
           if(n==1){
               jButton5.setIcon(WhitePawn);
        }else if(n==6){    
               jButton5.setIcon(WhiteBishop);
        }else if(n==8){
               jButton5.setIcon(WhiteKnight);
        }else if(n==20){
               jButton5.setIcon(WhiteQueen);
        }else if(n==10){
               jButton5.setIcon(WhiteRook);     
        }else if(n==50){
            jButton5.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton5.setIcon(BlackPawn);
        }else if(n==-6){
            jButton5.setIcon(BlackBishop);
        }else if(n==-8){
            jButton5.setIcon(BlackKnight);
        }else if(n==-10){
            jButton5.setIcon(BlackRook);
        }else if(n==-20){
            jButton5.setIcon(BlackQueen);
        }else if(n==-50){
            jButton5.setIcon(BlackKing);
        }
           n=z[0][5];
            if(n==1){
               jButton6.setIcon(WhitePawn);
        }else if(n==6){    
               jButton6.setIcon(WhiteBishop);
        }else if(n==8){
               jButton6.setIcon(WhiteKnight);
        }else if(n==20){
               jButton6.setIcon(WhiteQueen);
        }else if(n==10){
               jButton6.setIcon(WhiteRook);     
        }else if(n==50){
            jButton6.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton6.setIcon(BlackPawn);
        }else if(n==-6){
            jButton6.setIcon(BlackBishop);
        }else if(n==-8){
            jButton6.setIcon(BlackKnight);
        }else if(n==-10){
            jButton6.setIcon(BlackRook);
        }else if(n==-20){
            jButton6.setIcon(BlackQueen);
        }else if(n==-50){
            jButton6.setIcon(BlackKing);
        }
              n=z[0][6];
               if(n==1){
               jButton7.setIcon(WhitePawn);
        }else if(n==6){    
               jButton7.setIcon(WhiteBishop);
        }else if(n==8){
               jButton7.setIcon(WhiteKnight);
        }else if(n==20){
               jButton7.setIcon(WhiteQueen);
        }else if(n==10){
               jButton7.setIcon(WhiteRook);     
        }else if(n==50){
            jButton7.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton7.setIcon(BlackPawn);
        }else if(n==-6){
            jButton7.setIcon(BlackBishop);
        }else if(n==-8){
            jButton7.setIcon(BlackKnight);
        }else if(n==-10){
            jButton7.setIcon(BlackRook);
        }else if(n==-20){
            jButton7.setIcon(BlackQueen);
        }else if(n==-50){
            jButton7.setIcon(BlackKing);
        }
               n=z[0][7];
        if(n==1){
               jButton8.setIcon(WhitePawn);
        }else if(n==6){    
               jButton8.setIcon(WhiteBishop);
        }else if(n==8){
               jButton8.setIcon(WhiteKnight);
        }else if(n==20){
               jButton8.setIcon(WhiteQueen);
        }else if(n==10){
               jButton8.setIcon(WhiteRook);     
        }else if(n==50){
            jButton8.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton8.setIcon(BlackPawn);
        }else if(n==-6){
            jButton8.setIcon(BlackBishop);
        }else if(n==-8){
            jButton8.setIcon(BlackKnight);
        }else if(n==-10){
            jButton8.setIcon(BlackRook);
        }else if(n==-20){
            jButton8.setIcon(BlackQueen);
        }else if(n==-50){
            jButton8.setIcon(BlackKing);
        }
        n=z[1][0];
         if(n==1){
               jButton9.setIcon(WhitePawn);
        }else if(n==6){    
               jButton9.setIcon(WhiteBishop);
        }else if(n==8){
               jButton9.setIcon(WhiteKnight);
        }else if(n==20){
               jButton9.setIcon(WhiteQueen);
        }else if(n==10){
               jButton9.setIcon(WhiteRook);     
        }else if(n==50){
            jButton9.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton9.setIcon(BlackPawn);
        }else if(n==-6){
            jButton9.setIcon(BlackBishop);
        }else if(n==-8){
            jButton9.setIcon(BlackKnight);
        }else if(n==-10){
            jButton9.setIcon(BlackRook);
        }else if(n==-20){
            jButton9.setIcon(BlackQueen);
        }else if(n==-50){
            jButton9.setIcon(BlackKing);
        }
         n=z[1][1];
          if(n==1){
               jButton10.setIcon(WhitePawn);
        }else if(n==6){    
               jButton10.setIcon(WhiteBishop);
        }else if(n==8){
               jButton10.setIcon(WhiteKnight);
        }else if(n==20){
               jButton10.setIcon(WhiteQueen);
        }else if(n==10){
               jButton10.setIcon(WhiteRook);     
        }else if(n==50){
            jButton10.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton10.setIcon(BlackPawn);
        }else if(n==-6){
            jButton10.setIcon(BlackBishop);
        }else if(n==-8){
            jButton10.setIcon(BlackKnight);
        }else if(n==-10){
            jButton10.setIcon(BlackRook);
        }else if(n==-20){
            jButton10.setIcon(BlackQueen);
        }else if(n==-50){
            jButton10.setIcon(BlackKing);
        }
          n=z[1][2];
           if(n==1){
               jButton11.setIcon(WhitePawn);
        }else if(n==6){    
               jButton11.setIcon(WhiteBishop);
        }else if(n==8){
               jButton11.setIcon(WhiteKnight);
        }else if(n==20){
               jButton11.setIcon(WhiteQueen);
        }else if(n==10){
               jButton11.setIcon(WhiteRook);     
        }else if(n==50){
            jButton11.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton11.setIcon(BlackPawn);
        }else if(n==-6){
            jButton11.setIcon(BlackBishop);
        }else if(n==-8){
            jButton11.setIcon(BlackKnight);
        }else if(n==-10){
            jButton11.setIcon(BlackRook);
        }else if(n==-20){
            jButton11.setIcon(BlackQueen);
        }else if(n==-50){
            jButton11.setIcon(BlackKing);
        }
           n=z[1][3];
            if(n==1){
               jButton12.setIcon(WhitePawn);
        }else if(n==6){    
               jButton12.setIcon(WhiteBishop);
        }else if(n==8){
               jButton12.setIcon(WhiteKnight);
        }else if(n==20){
               jButton12.setIcon(WhiteQueen);
        }else if(n==10){
               jButton12.setIcon(WhiteRook);     
        }else if(n==50){
            jButton12.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton12.setIcon(BlackPawn);
        }else if(n==-6){
            jButton12.setIcon(BlackBishop);
        }else if(n==-8){
            jButton12.setIcon(BlackKnight);
        }else if(n==-10){
            jButton12.setIcon(BlackRook);
        }else if(n==-20){
            jButton12.setIcon(BlackQueen);
        }else if(n==-50){
            jButton12.setIcon(BlackKing);
        }
           n=z[1][4];
            if(n==1){
               jButton13.setIcon(WhitePawn);
        }else if(n==6){    
               jButton13.setIcon(WhiteBishop);
        }else if(n==8){
               jButton13.setIcon(WhiteKnight);
        }else if(n==20){
               jButton13.setIcon(WhiteQueen);
        }else if(n==10){
               jButton13.setIcon(WhiteRook);     
        }else if(n==50){
            jButton13.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton13.setIcon(BlackPawn);
        }else if(n==-6){
            jButton13.setIcon(BlackBishop);
        }else if(n==-8){
            jButton13.setIcon(BlackKnight);
        }else if(n==-10){
            jButton13.setIcon(BlackRook);
        }else if(n==-20){
            jButton13.setIcon(BlackQueen);
        }else if(n==-50){
            jButton13.setIcon(BlackKing);
        }
          n=z[1][5];
           if(n==1){
               jButton14.setIcon(WhitePawn);
        }else if(n==6){    
               jButton14.setIcon(WhiteBishop);
        }else if(n==8){
               jButton14.setIcon(WhiteKnight);
        }else if(n==20){
               jButton14.setIcon(WhiteQueen);
        }else if(n==10){
               jButton14.setIcon(WhiteRook);     
        }else if(n==50){
            jButton14.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton14.setIcon(BlackPawn);
        }else if(n==-6){
            jButton14.setIcon(BlackBishop);
        }else if(n==-8){
            jButton14.setIcon(BlackKnight);
        }else if(n==-10){
            jButton14.setIcon(BlackRook);
        }else if(n==-20){
            jButton14.setIcon(BlackQueen);
        }else if(n==-50){
            jButton14.setIcon(BlackKing);
        }
           n=z[1][6];
            if(n==1){
               jButton15.setIcon(WhitePawn);
        }else if(n==6){    
               jButton15.setIcon(WhiteBishop);
        }else if(n==8){
               jButton15.setIcon(WhiteKnight);
        }else if(n==20){
               jButton15.setIcon(WhiteQueen);
        }else if(n==10){
               jButton15.setIcon(WhiteRook);     
        }else if(n==50){
            jButton15.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton15.setIcon(BlackPawn);
        }else if(n==-6){
            jButton15.setIcon(BlackBishop);
        }else if(n==-8){
            jButton15.setIcon(BlackKnight);
        }else if(n==-10){
            jButton15.setIcon(BlackRook);
        }else if(n==-20){
            jButton15.setIcon(BlackQueen);
        }else if(n==-50){
            jButton15.setIcon(BlackKing);
        }
            n=z[1][7];
             if(n==1){
               jButton16.setIcon(WhitePawn);
        }else if(n==6){    
               jButton16.setIcon(WhiteBishop);
        }else if(n==8){
               jButton16.setIcon(WhiteKnight);
        }else if(n==20){
               jButton16.setIcon(WhiteQueen);
        }else if(n==10){
               jButton16.setIcon(WhiteRook);     
        }else if(n==50){
            jButton16.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton16.setIcon(BlackPawn);
        }else if(n==-6){
            jButton16.setIcon(BlackBishop);
        }else if(n==-8){
            jButton16.setIcon(BlackKnight);
        }else if(n==-10){
            jButton16.setIcon(BlackRook);
        }else if(n==-20){
            jButton16.setIcon(BlackQueen);
        }else if(n==-50){
            jButton16.setIcon(BlackKing);
        }
          n=z[2][0];
           if(n==1){
               jButton17.setIcon(WhitePawn);
        }else if(n==6){    
               jButton17.setIcon(WhiteBishop);
        }else if(n==8){
               jButton17.setIcon(WhiteKnight);
        }else if(n==20){
               jButton17.setIcon(WhiteQueen);
        }else if(n==10){
               jButton17.setIcon(WhiteRook);     
        }else if(n==50){
            jButton17.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton17.setIcon(BlackPawn);
        }else if(n==-6){
            jButton17.setIcon(BlackBishop);
        }else if(n==-8){
            jButton17.setIcon(BlackKnight);
        }else if(n==-10){
            jButton17.setIcon(BlackRook);
        }else if(n==-20){
            jButton17.setIcon(BlackQueen);
        }else if(n==-50){
            jButton17.setIcon(BlackKing);
        }
           n=z[2][1];
            if(n==1){
               jButton18.setIcon(WhitePawn);
        }else if(n==6){    
               jButton18.setIcon(WhiteBishop);
        }else if(n==8){
               jButton18.setIcon(WhiteKnight);
        }else if(n==20){
               jButton18.setIcon(WhiteQueen);
        }else if(n==10){
               jButton18.setIcon(WhiteRook);     
        }else if(n==50){
            jButton18.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton18.setIcon(BlackPawn);
        }else if(n==-6){
            jButton18.setIcon(BlackBishop);
        }else if(n==-8){
            jButton18.setIcon(BlackKnight);
        }else if(n==-10){
            jButton18.setIcon(BlackRook);
        }else if(n==-20){
            jButton18.setIcon(BlackQueen);
        }else if(n==-50){
            jButton18.setIcon(BlackKing);
        }
            n=z[2][2];
             if(n==1){
               jButton19.setIcon(WhitePawn);
        }else if(n==6){    
               jButton19.setIcon(WhiteBishop);
        }else if(n==8){
               jButton19.setIcon(WhiteKnight);
        }else if(n==20){
               jButton19.setIcon(WhiteQueen);
        }else if(n==10){
               jButton19.setIcon(WhiteRook);     
        }else if(n==50){
            jButton19.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton19.setIcon(BlackPawn);
        }else if(n==-6){
            jButton19.setIcon(BlackBishop);
        }else if(n==-8){
            jButton19.setIcon(BlackKnight);
        }else if(n==-10){
            jButton19.setIcon(BlackRook);
        }else if(n==-20){
            jButton19.setIcon(BlackQueen);
        }else if(n==-50){
            jButton19.setIcon(BlackKing);
        }
             n=z[2][3];
              if(n==1){
               jButton20.setIcon(WhitePawn);
        }else if(n==6){    
               jButton20.setIcon(WhiteBishop);
        }else if(n==8){
               jButton20.setIcon(WhiteKnight);
        }else if(n==20){
               jButton20.setIcon(WhiteQueen);
        }else if(n==10){
               jButton20.setIcon(WhiteRook);     
        }else if(n==50){
            jButton20.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton20.setIcon(BlackPawn);
        }else if(n==-6){
            jButton20.setIcon(BlackBishop);
        }else if(n==-8){
            jButton20.setIcon(BlackKnight);
        }else if(n==-10){
            jButton20.setIcon(BlackRook);
        }else if(n==-20){
            jButton20.setIcon(BlackQueen);
        }else if(n==-50){
            jButton20.setIcon(BlackKing);
        }
              n=z[2][4];
               if(n==1){
               jButton21.setIcon(WhitePawn);
        }else if(n==6){    
               jButton21.setIcon(WhiteBishop);
        }else if(n==8){
               jButton21.setIcon(WhiteKnight);
        }else if(n==20){
               jButton21.setIcon(WhiteQueen);
        }else if(n==10){
               jButton21.setIcon(WhiteRook);     
        }else if(n==50){
            jButton21.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton21.setIcon(BlackPawn);
        }else if(n==-6){
            jButton21.setIcon(BlackBishop);
        }else if(n==-8){
            jButton21.setIcon(BlackKnight);
        }else if(n==-10){
            jButton21.setIcon(BlackRook);
        }else if(n==-20){
            jButton21.setIcon(BlackQueen);
        }else if(n==-50){
            jButton21.setIcon(BlackKing);
        }   
               n=z[2][5];
                if(n==1){
               jButton22.setIcon(WhitePawn);
        }else if(n==6){    
               jButton22.setIcon(WhiteBishop);
        }else if(n==8){
               jButton22.setIcon(WhiteKnight);
        }else if(n==20){
               jButton22.setIcon(WhiteQueen);
        }else if(n==10){
               jButton22.setIcon(WhiteRook);     
        }else if(n==50){
            jButton22.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton22.setIcon(BlackPawn);
        }else if(n==-6){
            jButton22.setIcon(BlackBishop);
        }else if(n==-8){
            jButton22.setIcon(BlackKnight);
        }else if(n==-10){
            jButton22.setIcon(BlackRook);
        }else if(n==-20){
            jButton22.setIcon(BlackQueen);
        }else if(n==-50){
            jButton22.setIcon(BlackKing);
        }   
                n=z[2][6];
                 if(n==1){
               jButton23.setIcon(WhitePawn);
        }else if(n==6){    
               jButton23.setIcon(WhiteBishop);
        }else if(n==8){
               jButton23.setIcon(WhiteKnight);
        }else if(n==20){
               jButton23.setIcon(WhiteQueen);
        }else if(n==10){
               jButton23.setIcon(WhiteRook);     
        }else if(n==50){
            jButton23.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton23.setIcon(BlackPawn);
        }else if(n==-6){
            jButton23.setIcon(BlackBishop);
        }else if(n==-8){
            jButton23.setIcon(BlackKnight);
        }else if(n==-10){
            jButton23.setIcon(BlackRook);
        }else if(n==-20){
            jButton23.setIcon(BlackQueen);
        }else if(n==-50){
            jButton23.setIcon(BlackKing);
        }   
                 n=z[2][7];
                  if(n==1){
               jButton24.setIcon(WhitePawn);
        }else if(n==6){    
               jButton24.setIcon(WhiteBishop);
        }else if(n==8){
               jButton24.setIcon(WhiteKnight);
        }else if(n==20){
               jButton24.setIcon(WhiteQueen);
        }else if(n==10){
               jButton24.setIcon(WhiteRook);     
        }else if(n==50){
            jButton24.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton24.setIcon(BlackPawn);
        }else if(n==-6){
            jButton24.setIcon(BlackBishop);
        }else if(n==-8){
            jButton24.setIcon(BlackKnight);
        }else if(n==-10){
            jButton24.setIcon(BlackRook);
        }else if(n==-20){
            jButton24.setIcon(BlackQueen);
        }else if(n==-50){
            jButton24.setIcon(BlackKing);
        }
                  n=z[3][0];
                   if(n==1){
               jButton25.setIcon(WhitePawn);
        }else if(n==6){    
               jButton25.setIcon(WhiteBishop);
        }else if(n==8){
               jButton25.setIcon(WhiteKnight);
        }else if(n==20){
               jButton25.setIcon(WhiteQueen);
        }else if(n==10){
               jButton25.setIcon(WhiteRook);     
        }else if(n==50){
            jButton25.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton25.setIcon(BlackPawn);
        }else if(n==-6){
            jButton25.setIcon(BlackBishop);
        }else if(n==-8){
            jButton25.setIcon(BlackKnight);
        }else if(n==-10){
            jButton25.setIcon(BlackRook);
        }else if(n==-20){
            jButton25.setIcon(BlackQueen);
        }else if(n==-50){
            jButton25.setIcon(BlackKing);
        }   
                   n=z[3][1];
                    if(n==1){
               jButton26.setIcon(WhitePawn);
        }else if(n==6){    
               jButton26.setIcon(WhiteBishop);
        }else if(n==8){
               jButton26.setIcon(WhiteKnight);
        }else if(n==20){
               jButton26.setIcon(WhiteQueen);
        }else if(n==10){
               jButton26.setIcon(WhiteRook);     
        }else if(n==50){
            jButton26.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton26.setIcon(BlackPawn);
        }else if(n==-6){
            jButton26.setIcon(BlackBishop);
        }else if(n==-8){
            jButton26.setIcon(BlackKnight);
        }else if(n==-10){
            jButton26.setIcon(BlackRook);
        }else if(n==-20){
            jButton26.setIcon(BlackQueen);
        }else if(n==-50){
            jButton26.setIcon(BlackKing);
        }   
                    n=z[3][2];
                     if(n==1){
               jButton27.setIcon(WhitePawn);
        }else if(n==6){    
               jButton27.setIcon(WhiteBishop);
        }else if(n==8){
               jButton27.setIcon(WhiteKnight);
        }else if(n==20){
               jButton27.setIcon(WhiteQueen);
        }else if(n==10){
               jButton27.setIcon(WhiteRook);     
        }else if(n==50){
            jButton27.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton27.setIcon(BlackPawn);
        }else if(n==-6){
            jButton27.setIcon(BlackBishop);
        }else if(n==-8){
            jButton27.setIcon(BlackKnight);
        }else if(n==-10){
            jButton27.setIcon(BlackRook);
        }else if(n==-20){
            jButton27.setIcon(BlackQueen);
        }else if(n==-50){
            jButton27.setIcon(BlackKing);
        }   n=z[3][3];
         if(n==1){
               jButton28.setIcon(WhitePawn);
        }else if(n==6){    
               jButton28.setIcon(WhiteBishop);
        }else if(n==8){
               jButton28.setIcon(WhiteKnight);
        }else if(n==20){
               jButton28.setIcon(WhiteQueen);
        }else if(n==10){
               jButton28.setIcon(WhiteRook);     
        }else if(n==50){
            jButton28.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton28.setIcon(BlackPawn);
        }else if(n==-6){
            jButton28.setIcon(BlackBishop);
        }else if(n==-8){
            jButton28.setIcon(BlackKnight);
        }else if(n==-10){
            jButton28.setIcon(BlackRook);
        }else if(n==-20){
            jButton28.setIcon(BlackQueen);
        }else if(n==-50){
            jButton28.setIcon(BlackKing);
        }   n=z[3][4];
         if(n==1){
               jButton29.setIcon(WhitePawn);
        }else if(n==6){    
               jButton29.setIcon(WhiteBishop);
        }else if(n==8){
               jButton29.setIcon(WhiteKnight);
        }else if(n==20){
               jButton29.setIcon(WhiteQueen);
        }else if(n==10){
               jButton29.setIcon(WhiteRook);     
        }else if(n==50){
            jButton29.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton29.setIcon(BlackPawn);
        }else if(n==-6){
            jButton29.setIcon(BlackBishop);
        }else if(n==-8){
            jButton29.setIcon(BlackKnight);
        }else if(n==-10){
            jButton29.setIcon(BlackRook);
        }else if(n==-20){
            jButton29.setIcon(BlackQueen);
        }else if(n==-50){
            jButton29.setIcon(BlackKing);
        }   n=z[3][5];
         if(n==1){
               jButton30.setIcon(WhitePawn);
        }else if(n==6){    
               jButton30.setIcon(WhiteBishop);
        }else if(n==8){
               jButton30.setIcon(WhiteKnight);
        }else if(n==20){
               jButton30.setIcon(WhiteQueen);
        }else if(n==10){
               jButton30.setIcon(WhiteRook);     
        }else if(n==50){
            jButton30.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton30.setIcon(BlackPawn);
        }else if(n==-6){
            jButton30.setIcon(BlackBishop);
        }else if(n==-8){
            jButton30.setIcon(BlackKnight);
        }else if(n==-10){
            jButton30.setIcon(BlackRook);
        }else if(n==-20){
            jButton30.setIcon(BlackQueen);
        }else if(n==-50){
            jButton30.setIcon(BlackKing);
        }   n=z[3][6];
         if(n==1){
               jButton31.setIcon(WhitePawn);
        }else if(n==6){    
               jButton31.setIcon(WhiteBishop);
        }else if(n==8){
               jButton31.setIcon(WhiteKnight);
        }else if(n==20){
               jButton31.setIcon(WhiteQueen);
        }else if(n==10){
               jButton31.setIcon(WhiteRook);     
        }else if(n==50){
            jButton31.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton31.setIcon(BlackPawn);
        }else if(n==-6){
            jButton31.setIcon(BlackBishop);
        }else if(n==-8){
            jButton31.setIcon(BlackKnight);
        }else if(n==-10){
            jButton31.setIcon(BlackRook);
        }else if(n==-20){
            jButton31.setIcon(BlackQueen);
        }else if(n==-50){
            jButton31.setIcon(BlackKing);
        }   
         n=z[3][7];
         if(n==1){
               jButton32.setIcon(WhitePawn);
        }else if(n==6){    
               jButton32.setIcon(WhiteBishop);
        }else if(n==8){
               jButton32.setIcon(WhiteKnight);
        }else if(n==20){
               jButton32.setIcon(WhiteQueen);
        }else if(n==10){
               jButton32.setIcon(WhiteRook);     
        }else if(n==50){
            jButton32.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton32.setIcon(BlackPawn);
        }else if(n==-6){
            jButton32.setIcon(BlackBishop);
        }else if(n==-8){
            jButton32.setIcon(BlackKnight);
        }else if(n==-10){
            jButton32.setIcon(BlackRook);
        }else if(n==-20){
            jButton32.setIcon(BlackQueen);
        }else if(n==-50){
            jButton32.setIcon(BlackKing);
        }   
         n=z[4][0];
         if(n==1){
               jButton33.setIcon(WhitePawn);
        }else if(n==6){    
               jButton33.setIcon(WhiteBishop);
        }else if(n==8){
               jButton33.setIcon(WhiteKnight);
        }else if(n==20){
               jButton33.setIcon(WhiteQueen);
        }else if(n==10){
               jButton33.setIcon(WhiteRook);     
        }else if(n==50){
            jButton33.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton33.setIcon(BlackPawn);
        }else if(n==-6){
            jButton33.setIcon(BlackBishop);
        }else if(n==-8){
            jButton33.setIcon(BlackKnight);
        }else if(n==-10){
            jButton33.setIcon(BlackRook);
        }else if(n==-20){
            jButton33.setIcon(BlackQueen);
        }else if(n==-50){
            jButton33.setIcon(BlackKing);
        }   
         n=z[4][1];
         if(n==1){
               jButton34.setIcon(WhitePawn);
        }else if(n==6){    
               jButton34.setIcon(WhiteBishop);
        }else if(n==8){
               jButton34.setIcon(WhiteKnight);
        }else if(n==20){
               jButton34.setIcon(WhiteQueen);
        }else if(n==10){
               jButton34.setIcon(WhiteRook);     
        }else if(n==50){
            jButton34.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton34.setIcon(BlackPawn);
        }else if(n==-6){
            jButton34.setIcon(BlackBishop);
        }else if(n==-8){
            jButton34.setIcon(BlackKnight);
        }else if(n==-10){
            jButton34.setIcon(BlackRook);
        }else if(n==-20){
            jButton34.setIcon(BlackQueen);
        }else if(n==-50){
            jButton34.setIcon(BlackKing);
        }   n=z[4][2];
        if(n==1){
               jButton35.setIcon(WhitePawn);
        }else if(n==6){    
               jButton35.setIcon(WhiteBishop);
        }else if(n==8){
               jButton35.setIcon(WhiteKnight);
        }else if(n==20){
               jButton35.setIcon(WhiteQueen);
        }else if(n==10){
               jButton35.setIcon(WhiteRook);     
        }else if(n==50){
            jButton35.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton35.setIcon(BlackPawn);
        }else if(n==-6){
            jButton35.setIcon(BlackBishop);
        }else if(n==-8){
            jButton35.setIcon(BlackKnight);
        }else if(n==-10){
            jButton35.setIcon(BlackRook);
        }else if(n==-20){
            jButton35.setIcon(BlackQueen);
        }else if(n==-50){
            jButton35.setIcon(BlackKing);
        }   n=z[4][3];
        if(n==1){
               jButton36.setIcon(WhitePawn);
        }else if(n==6){    
               jButton36.setIcon(WhiteBishop);
        }else if(n==8){
               jButton36.setIcon(WhiteKnight);
        }else if(n==20){
               jButton36.setIcon(WhiteQueen);
        }else if(n==10){
               jButton36.setIcon(WhiteRook);     
        }else if(n==50){
            jButton36.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton36.setIcon(BlackPawn);
        }else if(n==-6){
            jButton36.setIcon(BlackBishop);
        }else if(n==-8){
            jButton36.setIcon(BlackKnight);
        }else if(n==-10){
            jButton36.setIcon(BlackRook);
        }else if(n==-20){
            jButton36.setIcon(BlackQueen);
        }else if(n==-50){
            jButton36.setIcon(BlackKing);
        }   n=z[4][4];
        if(n==1){
               jButton37.setIcon(WhitePawn);
        }else if(n==6){    
               jButton37.setIcon(WhiteBishop);
        }else if(n==8){
               jButton37.setIcon(WhiteKnight);
        }else if(n==20){
               jButton37.setIcon(WhiteQueen);
        }else if(n==10){
               jButton37.setIcon(WhiteRook);     
        }else if(n==50){
            jButton37.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton37.setIcon(BlackPawn);
        }else if(n==-6){
            jButton37.setIcon(BlackBishop);
        }else if(n==-8){
            jButton37.setIcon(BlackKnight);
        }else if(n==-10){
            jButton37.setIcon(BlackRook);
        }else if(n==-20){
            jButton37.setIcon(BlackQueen);
        }else if(n==-50){
            jButton37.setIcon(BlackKing);
        } n=z[4][5];
        if(n==1){
               jButton38.setIcon(WhitePawn);
        }else if(n==6){    
               jButton38.setIcon(WhiteBishop);
        }else if(n==8){
               jButton38.setIcon(WhiteKnight);
        }else if(n==20){
               jButton38.setIcon(WhiteQueen);
        }else if(n==10){
               jButton38.setIcon(WhiteRook);     
        }else if(n==50){
            jButton38.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton38.setIcon(BlackPawn);
        }else if(n==-6){
            jButton38.setIcon(BlackBishop);
        }else if(n==-8){
            jButton38.setIcon(BlackKnight);
        }else if(n==-10){
            jButton38.setIcon(BlackRook);
        }else if(n==-20){
            jButton38.setIcon(BlackQueen);
        }else if(n==-50){
            jButton38.setIcon(BlackKing);
        }   n=z[4][6];
        if(n==1){
               jButton39.setIcon(WhitePawn);
        }else if(n==6){    
               jButton39.setIcon(WhiteBishop);
        }else if(n==8){
               jButton39.setIcon(WhiteKnight);
        }else if(n==20){
               jButton39.setIcon(WhiteQueen);
        }else if(n==10){
               jButton39.setIcon(WhiteRook);     
        }else if(n==50){
            jButton39.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton39.setIcon(BlackPawn);
        }else if(n==-6){
            jButton39.setIcon(BlackBishop);
        }else if(n==-8){
            jButton39.setIcon(BlackKnight);
        }else if(n==-10){
            jButton39.setIcon(BlackRook);
        }else if(n==-20){
            jButton39.setIcon(BlackQueen);
        }else if(n==-50){
            jButton39.setIcon(BlackKing);
        }   n=z[4][7];
        if(n==1){
               jButton40.setIcon(WhitePawn);
        }else if(n==6){    
               jButton40.setIcon(WhiteBishop);
        }else if(n==8){
               jButton40.setIcon(WhiteKnight);
        }else if(n==20){
               jButton40.setIcon(WhiteQueen);
        }else if(n==10){
               jButton40.setIcon(WhiteRook);     
        }else if(n==50){
            jButton40.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton40.setIcon(BlackPawn);
        }else if(n==-6){
            jButton40.setIcon(BlackBishop);
        }else if(n==-8){
            jButton40.setIcon(BlackKnight);
        }else if(n==-10){
            jButton40.setIcon(BlackRook);
        }else if(n==-20){
            jButton40.setIcon(BlackQueen);
        }else if(n==-50){
            jButton40.setIcon(BlackKing);
        }   n=z[5][0];
        if(n==1){
               jButton41.setIcon(WhitePawn);
        }else if(n==6){    
               jButton41.setIcon(WhiteBishop);
        }else if(n==8){
               jButton41.setIcon(WhiteKnight);
        }else if(n==20){
               jButton41.setIcon(WhiteQueen);
        }else if(n==10){
               jButton41.setIcon(WhiteRook);     
        }else if(n==50){
            jButton41.setIcon(WhiteKing);   
        }else if(n==-1){
            jButton41.setIcon(BlackPawn);
        }else if(n==-6){
            jButton41.setIcon(BlackBishop);
        }else if(n==-8){
            jButton41.setIcon(BlackKnight);
        }else if(n==-10){
            jButton41.setIcon(BlackRook);
        }else if(n==-20){
            jButton41.setIcon(BlackQueen);
        }else if(n==-50){
            jButton41.setIcon(BlackKing);
        }   n=z[5][1];
        if(n==1){
               jButton42.setIcon(WhitePawn);
        }else if(n==6){    
               jButton42.setIcon(WhiteBishop);
        }else if(n==8){
               jButton42.setIcon(WhiteKnight);
        }else if(n==20){
               jButton42.setIcon(WhiteQueen);
        }else if(n==10){
               jButton42.setIcon(WhiteRook);     
        }else if(n==50){
               jButton42.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton42.setIcon(BlackPawn);
        }else if(n==-6){
               jButton42.setIcon(BlackBishop);
        }else if(n==-8){
               jButton42.setIcon(BlackKnight);
        }else if(n==-10){
               jButton42.setIcon(BlackRook);
        }else if(n==-20){
               jButton42.setIcon(BlackQueen);
        }else if(n==-50){
               jButton42.setIcon(BlackKing);
        }  n=z[5][2];
        if(n==1){
               jButton43.setIcon(WhitePawn);
        }else if(n==6){    
               jButton43.setIcon(WhiteBishop);
        }else if(n==8){
               jButton43.setIcon(WhiteKnight);
        }else if(n==20){
               jButton43.setIcon(WhiteQueen);
        }else if(n==10){
               jButton43.setIcon(WhiteRook);     
        }else if(n==50){
               jButton43.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton43.setIcon(BlackPawn);
        }else if(n==-6){
               jButton43.setIcon(BlackBishop);
        }else if(n==-8){
               jButton43.setIcon(BlackKnight);
        }else if(n==-10){
               jButton43.setIcon(BlackRook);
        }else if(n==-20){
               jButton43.setIcon(BlackQueen);
        }else if(n==-50){
               jButton43.setIcon(BlackKing);
        }  n=z[5][3];
        if(n==1){
               jButton44.setIcon(WhitePawn);
        }else if(n==6){    
               jButton44.setIcon(WhiteBishop);
        }else if(n==8){
               jButton44.setIcon(WhiteKnight);
        }else if(n==20){
               jButton44.setIcon(WhiteQueen);
        }else if(n==10){
               jButton44.setIcon(WhiteRook);     
        }else if(n==50){
               jButton44.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton44.setIcon(BlackPawn);
        }else if(n==-6){
               jButton44.setIcon(BlackBishop);
        }else if(n==-8){
               jButton44.setIcon(BlackKnight);
        }else if(n==-10){
               jButton44.setIcon(BlackRook);
        }else if(n==-20){
               jButton44.setIcon(BlackQueen);
        }else if(n==-50){
               jButton44.setIcon(BlackKing);
        }  n=z[5][4];
        
        if(n==1){
               jButton45.setIcon(WhitePawn);
        }else if(n==6){    
               jButton45.setIcon(WhiteBishop);
        }else if(n==8){
               jButton45.setIcon(WhiteKnight);
        }else if(n==20){
               jButton45.setIcon(WhiteQueen);
        }else if(n==10){
               jButton45.setIcon(WhiteRook);     
        }else if(n==50){
               jButton45.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton45.setIcon(BlackPawn);
        }else if(n==-6){
               jButton45.setIcon(BlackBishop);
        }else if(n==-8){
               jButton45.setIcon(BlackKnight);
        }else if(n==-10){
               jButton45.setIcon(BlackRook);
        }else if(n==-20){
               jButton45.setIcon(BlackQueen);
        }else if(n==-50){
               jButton45.setIcon(BlackKing);
        }  n=z[5][5];
        if(n==1){
               jButton46.setIcon(WhitePawn);
        }else if(n==6){    
               jButton46.setIcon(WhiteBishop);
        }else if(n==8){
               jButton46.setIcon(WhiteKnight);
        }else if(n==20){
               jButton46.setIcon(WhiteQueen);
        }else if(n==10){
               jButton46.setIcon(WhiteRook);     
        }else if(n==50){
               jButton46.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton46.setIcon(BlackPawn);
        }else if(n==-6){
               jButton46.setIcon(BlackBishop);
        }else if(n==-8){
               jButton46.setIcon(BlackKnight);
        }else if(n==-10){
               jButton46.setIcon(BlackRook);
        }else if(n==-20){
               jButton46.setIcon(BlackQueen);
        }else if(n==-50){
               jButton46.setIcon(BlackKing);
        }  n=z[5][6];
        if(n==1){
               jButton47.setIcon(WhitePawn);
        }else if(n==6){    
               jButton47.setIcon(WhiteBishop);
        }else if(n==8){
               jButton47.setIcon(WhiteKnight);
        }else if(n==20){
               jButton47.setIcon(WhiteQueen);
        }else if(n==10){
               jButton47.setIcon(WhiteRook);     
        }else if(n==50){
               jButton47.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton47.setIcon(BlackPawn);
        }else if(n==-6){
               jButton47.setIcon(BlackBishop);
        }else if(n==-8){
               jButton47.setIcon(BlackKnight);
        }else if(n==-10){
               jButton47.setIcon(BlackRook);
        }else if(n==-20){
               jButton47.setIcon(BlackQueen);
        }else if(n==-50){
               jButton47.setIcon(BlackKing);
        }  n=z[5][7];
        if(n==1){
               jButton48.setIcon(WhitePawn);
        }else if(n==6){    
               jButton48.setIcon(WhiteBishop);
        }else if(n==8){
               jButton48.setIcon(WhiteKnight);
        }else if(n==20){
               jButton48.setIcon(WhiteQueen);
        }else if(n==10){
               jButton48.setIcon(WhiteRook);     
        }else if(n==50){
               jButton48.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton48.setIcon(BlackPawn);
        }else if(n==-6){
               jButton48.setIcon(BlackBishop);
        }else if(n==-8){
               jButton48.setIcon(BlackKnight);
        }else if(n==-10){
               jButton48.setIcon(BlackRook);
        }else if(n==-20){
               jButton48.setIcon(BlackQueen);
        }else if(n==-50){
               jButton48.setIcon(BlackKing);
        }  n=z[6][0];
        if(n==1){
               jButton49.setIcon(WhitePawn);
        }else if(n==6){    
               jButton49.setIcon(WhiteBishop);
        }else if(n==8){
               jButton49.setIcon(WhiteKnight);
        }else if(n==20){
               jButton49.setIcon(WhiteQueen);
        }else if(n==10){
               jButton49.setIcon(WhiteRook);     
        }else if(n==50){
               jButton49.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton49.setIcon(BlackPawn);
        }else if(n==-6){
               jButton49.setIcon(BlackBishop);
        }else if(n==-8){
               jButton49.setIcon(BlackKnight);
        }else if(n==-10){
               jButton49.setIcon(BlackRook);
        }else if(n==-20){
               jButton49.setIcon(BlackQueen);
        }else if(n==-50){
               jButton49.setIcon(BlackKing);
        }  n=z[6][1];
        if(n==1){
               jButton50.setIcon(WhitePawn);
        }else if(n==6){    
               jButton50.setIcon(WhiteBishop);
        }else if(n==8){
               jButton50.setIcon(WhiteKnight);
        }else if(n==20){
               jButton50.setIcon(WhiteQueen);
        }else if(n==10){
               jButton50.setIcon(WhiteRook);     
        }else if(n==50){
               jButton50.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton50.setIcon(BlackPawn);
        }else if(n==-6){
               jButton50.setIcon(BlackBishop);
        }else if(n==-8){
               jButton50.setIcon(BlackKnight);
        }else if(n==-10){
               jButton50.setIcon(BlackRook);
        }else if(n==-20){
               jButton50.setIcon(BlackQueen);
        }else if(n==-50){
               jButton50.setIcon(BlackKing);
        }  n=z[6][2];
        if(n==1){
               jButton51.setIcon(WhitePawn);
        }else if(n==6){    
               jButton51.setIcon(WhiteBishop);
        }else if(n==8){
               jButton51.setIcon(WhiteKnight);
        }else if(n==20){
               jButton51.setIcon(WhiteQueen);
        }else if(n==10){
               jButton51.setIcon(WhiteRook);     
        }else if(n==50){
               jButton51.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton51.setIcon(BlackPawn);
        }else if(n==-6){
               jButton51.setIcon(BlackBishop);
        }else if(n==-8){
               jButton51.setIcon(BlackKnight);
        }else if(n==-10){
               jButton51.setIcon(BlackRook);
        }else if(n==-20){
               jButton51.setIcon(BlackQueen);
        }else if(n==-50){
               jButton51.setIcon(BlackKing);
        }   n=z[6][3];
        if(n==1){
               jButton52.setIcon(WhitePawn);
        }else if(n==6){    
               jButton52.setIcon(WhiteBishop);
        }else if(n==8){
               jButton52.setIcon(WhiteKnight);
        }else if(n==20){
               jButton52.setIcon(WhiteQueen);
        }else if(n==10){
               jButton52.setIcon(WhiteRook);     
        }else if(n==50){
               jButton52.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton52.setIcon(BlackPawn);
        }else if(n==-6){
               jButton52.setIcon(BlackBishop);
        }else if(n==-8){
               jButton52.setIcon(BlackKnight);
        }else if(n==-10){
               jButton52.setIcon(BlackRook);
        }else if(n==-20){
               jButton52.setIcon(BlackQueen);
        }else if(n==-50){
               jButton52.setIcon(BlackKing);
        }   n=z[6][4];
        if(n==1){
               jButton53.setIcon(WhitePawn);
        }else if(n==6){    
               jButton53.setIcon(WhiteBishop);
        }else if(n==8){
               jButton53.setIcon(WhiteKnight);
        }else if(n==20){
               jButton53.setIcon(WhiteQueen);
        }else if(n==10){
               jButton53.setIcon(WhiteRook);     
        }else if(n==50){
               jButton53.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton53.setIcon(BlackPawn);
        }else if(n==-6){
               jButton53.setIcon(BlackBishop);
        }else if(n==-8){
               jButton53.setIcon(BlackKnight);
        }else if(n==-10){
               jButton53.setIcon(BlackRook);
        }else if(n==-20){
               jButton53.setIcon(BlackQueen);
        }else if(n==-50){
               jButton53.setIcon(BlackKing);
        }n=z[6][5];
        if(n==1){
               jButton54.setIcon(WhitePawn);
        }else if(n==6){    
               jButton54.setIcon(WhiteBishop);
        }else if(n==8){
               jButton54.setIcon(WhiteKnight);
        }else if(n==20){
               jButton54.setIcon(WhiteQueen);
        }else if(n==10){
               jButton54.setIcon(WhiteRook);     
        }else if(n==50){
               jButton54.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton54.setIcon(BlackPawn);
        }else if(n==-6){
               jButton54.setIcon(BlackBishop);
        }else if(n==-8){
               jButton54.setIcon(BlackKnight);
        }else if(n==-10){
               jButton54.setIcon(BlackRook);
        }else if(n==-20){
               jButton54.setIcon(BlackQueen);
        }else if(n==-50){
               jButton54.setIcon(BlackKing);
        }n=z[6][6];
        if(n==1){
               jButton55.setIcon(WhitePawn);
        }else if(n==6){    
               jButton55.setIcon(WhiteBishop);
        }else if(n==8){
               jButton55.setIcon(WhiteKnight);
        }else if(n==20){
               jButton55.setIcon(WhiteQueen);
        }else if(n==10){
               jButton55.setIcon(WhiteRook);     
        }else if(n==50){
               jButton55.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton55.setIcon(BlackPawn);
        }else if(n==-6){
               jButton55.setIcon(BlackBishop);
        }else if(n==-8){
               jButton55.setIcon(BlackKnight);
        }else if(n==-10){
               jButton55.setIcon(BlackRook);
        }else if(n==-20){
               jButton55.setIcon(BlackQueen);
        }else if(n==-50){
               jButton55.setIcon(BlackKing);
        }n=z[6][7];
        if(n==1){
               jButton56.setIcon(WhitePawn);
        }else if(n==6){    
               jButton56.setIcon(WhiteBishop);
        }else if(n==8){
               jButton56.setIcon(WhiteKnight);
        }else if(n==20){
               jButton56.setIcon(WhiteQueen);
        }else if(n==10){
               jButton56.setIcon(WhiteRook);     
        }else if(n==50){
               jButton56.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton56.setIcon(BlackPawn);
        }else if(n==-6){
               jButton56.setIcon(BlackBishop);
        }else if(n==-8){
               jButton56.setIcon(BlackKnight);
        }else if(n==-10){
               jButton56.setIcon(BlackRook);
        }else if(n==-20){
               jButton56.setIcon(BlackQueen);
        }else if(n==-50){
               jButton56.setIcon(BlackKing);
        }n=z[7][0];
        if(n==1){
               jButton57.setIcon(WhitePawn);
        }else if(n==6){    
               jButton57.setIcon(WhiteBishop);
        }else if(n==8){
               jButton57.setIcon(WhiteKnight);
        }else if(n==20){
               jButton57.setIcon(WhiteQueen);
        }else if(n==10){
               jButton57.setIcon(WhiteRook);     
        }else if(n==50){
               jButton57.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton57.setIcon(BlackPawn);
        }else if(n==-6){
               jButton57.setIcon(BlackBishop);
        }else if(n==-8){
               jButton57.setIcon(BlackKnight);
        }else if(n==-10){
               jButton57.setIcon(BlackRook);
        }else if(n==-20){
               jButton57.setIcon(BlackQueen);
        }else if(n==-50){
               jButton57.setIcon(BlackKing);
        }n=z[7][1];
        if(n==1){
               jButton58.setIcon(WhitePawn);
        }else if(n==6){    
               jButton58.setIcon(WhiteBishop);
        }else if(n==8){
               jButton58.setIcon(WhiteKnight);
        }else if(n==20){
               jButton58.setIcon(WhiteQueen);
        }else if(n==10){
               jButton58.setIcon(WhiteRook);     
        }else if(n==50){
               jButton58.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton58.setIcon(BlackPawn);
        }else if(n==-6){
               jButton58.setIcon(BlackBishop);
        }else if(n==-8){
               jButton58.setIcon(BlackKnight);
        }else if(n==-10){
               jButton58.setIcon(BlackRook);
        }else if(n==-20){
               jButton58.setIcon(BlackQueen);
        }else if(n==-50){
               jButton58.setIcon(BlackKing);
        }n=z[7][2];
        if(n==1){
               jButton59.setIcon(WhitePawn);
        }else if(n==6){    
               jButton59.setIcon(WhiteBishop);
        }else if(n==8){
               jButton59.setIcon(WhiteKnight);
        }else if(n==20){
               jButton59.setIcon(WhiteQueen);
        }else if(n==10){
               jButton59.setIcon(WhiteRook);     
        }else if(n==50){
               jButton59.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton59.setIcon(BlackPawn);
        }else if(n==-6){
               jButton59.setIcon(BlackBishop);
        }else if(n==-8){
               jButton59.setIcon(BlackKnight);
        }else if(n==-10){
               jButton59.setIcon(BlackRook);
        }else if(n==-20){
               jButton59.setIcon(BlackQueen);
        }else if(n==-50){
               jButton59.setIcon(BlackKing);
        }n=z[7][3];
        if(n==1){
               jButton60.setIcon(WhitePawn);
        }else if(n==6){    
               jButton60.setIcon(WhiteBishop);
        }else if(n==8){
               jButton60.setIcon(WhiteKnight);
        }else if(n==20){
               jButton60.setIcon(WhiteQueen);
        }else if(n==10){
               jButton60.setIcon(WhiteRook);     
        }else if(n==50){
               jButton60.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton60.setIcon(BlackPawn);
        }else if(n==-6){
               jButton60.setIcon(BlackBishop);
        }else if(n==-8){
               jButton60.setIcon(BlackKnight);
        }else if(n==-10){
               jButton60.setIcon(BlackRook);
        }else if(n==-20){
               jButton60.setIcon(BlackQueen);
        }else if(n==-50){
               jButton60.setIcon(BlackKing);
        }n=z[7][4];
        if(n==1){
               jButton61.setIcon(WhitePawn);
        }else if(n==6){    
               jButton61.setIcon(WhiteBishop);
        }else if(n==8){
               jButton61.setIcon(WhiteKnight);
        }else if(n==20){
               jButton61.setIcon(WhiteQueen);
        }else if(n==10){
               jButton61.setIcon(WhiteRook);     
        }else if(n==50){
               jButton61.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton61.setIcon(BlackPawn);
        }else if(n==-6){
               jButton61.setIcon(BlackBishop);
        }else if(n==-8){
               jButton61.setIcon(BlackKnight);
        }else if(n==-10){
               jButton61.setIcon(BlackRook);
        }else if(n==-20){
               jButton61.setIcon(BlackQueen);
        }else if(n==-50){
               jButton61.setIcon(BlackKing);
        }n=z[7][5];
        if(n==1){
               jButton62.setIcon(WhitePawn);
        }else if(n==6){    
               jButton62.setIcon(WhiteBishop);
        }else if(n==8){
               jButton62.setIcon(WhiteKnight);
        }else if(n==20){
               jButton62.setIcon(WhiteQueen);
        }else if(n==10){
               jButton62.setIcon(WhiteRook);     
        }else if(n==50){
               jButton62.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton62.setIcon(BlackPawn);
        }else if(n==-6){
               jButton62.setIcon(BlackBishop);
        }else if(n==-8){
               jButton62.setIcon(BlackKnight);
        }else if(n==-10){
               jButton62.setIcon(BlackRook);
        }else if(n==-20){
               jButton62.setIcon(BlackQueen);
        }else if(n==-50){
               jButton62.setIcon(BlackKing);
        }n=z[7][6];
        if(n==1){
               jButton63.setIcon(WhitePawn);
        }else if(n==6){    
               jButton63.setIcon(WhiteBishop);
        }else if(n==8){
               jButton63.setIcon(WhiteKnight);
        }else if(n==20){
               jButton63.setIcon(WhiteQueen);
        }else if(n==10){
               jButton63.setIcon(WhiteRook);     
        }else if(n==50){
               jButton63.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton63.setIcon(BlackPawn);
        }else if(n==-6){
               jButton63.setIcon(BlackBishop);
        }else if(n==-8){
               jButton63.setIcon(BlackKnight);
        }else if(n==-10){
               jButton63.setIcon(BlackRook);
        }else if(n==-20){
               jButton63.setIcon(BlackQueen);
        }else if(n==-50){
               jButton63.setIcon(BlackKing);
        }n=z[7][7];
        if(n==1){
               jButton64.setIcon(WhitePawn);
        }else if(n==6){    
               jButton64.setIcon(WhiteBishop);
        }else if(n==8){
               jButton64.setIcon(WhiteKnight);
        }else if(n==20){
               jButton64.setIcon(WhiteQueen);
        }else if(n==10){
               jButton64.setIcon(WhiteRook);     
        }else if(n==50){
               jButton64.setIcon(WhiteKing);   
        }else if(n==-1){
               jButton64.setIcon(BlackPawn);
        }else if(n==-6){
               jButton64.setIcon(BlackBishop);
        }else if(n==-8){
               jButton64.setIcon(BlackKnight);
        }else if(n==-10){
               jButton64.setIcon(BlackRook);
        }else if(n==-20){
               jButton64.setIcon(BlackQueen);
        }else if(n==-50){
               jButton64.setIcon(BlackKing);
        }
    }
    private boolean checkMove(int x2, int y2, int x1, int y1, int value) {
        if(whoseturn&&value>0){
            
        }else if(!whoseturn&&value<0){
            
        }else return false;
        if(value==1){
            if(x2==(x1-1)&&y2==y1){
                if(z[x2][y2]==0)
                    return true;
            } if(x2==(x1-1)&&((y2==(y1-1))||y2==(y1+1))){
                if(z[x2][y2]<0)
                     return true;
            }else if((x1==6)&&(x2==4)&&(y1==y2)){
                return true;
            }
        }else if(value==-1){
           if(x2==(x1+1)&&y2==y1){
                if(z[x2][y2]==0)
                    return true;
            } if(x2==(x1+1)&&((y2==(y1-1))||y2==(y1+1))){
                if(z[x2][y2]>0)
                     return true;
            }if((x1==1)&&(x2==3)&&(y1==y2)){
                return true;
            }
        }else if(value==10){
            int sum=0;
            if(y1==y2){
                    if(x1<x2){
                        for(int i=(x1+1);i<x2;i++){
                            sum+=z[i][y2];
                            
                        }
                        if(sum==0&&z[x2][y2]<=0)
                        return true;
                    }else for(int i=(x1-1);i>x2;i--){
                            sum+=z[i][y2];
                            
                        }
                        if(sum==0&&z[x2][y2]<=0)
                        return true;
                }else   if(x1==x2){
                       if(y1<y2){
                        for(int i=(y1+1);i<y2;i++){
                            sum+=z[x1][i];
                            
                        }
                        if(sum==0&&z[x2][y2]<=0)
                        return true;
                    }else for(int i=(y1-1);i>y2;i--){
                            sum+=z[x2][i];
                            
                        }
                        if(sum==0&&z[x2][y2]<=0)
                        return true;
            }
        }else if(value==-10){
            int sum=0;
            if(y1==y2){
                    if(x1<x2){
                        for(int i=(x1+1);i<x2;i++){
                            sum+=z[i][y2];
                            
                        }
                        if(sum==0&&z[x2][y2]>=0)
                        return true;
                    }else for(int i=(x1-1);i>x2;i--){
                            sum+=z[i][y2];
                            
                        }
                        if(sum==0&&z[x2][y2]>=0)
                        return true;
                }else   if(x1==x2){
                       if(y1<y2){
                        for(int i=(y1+1);i<y2;i++){
                            sum+=z[x1][i];
                            
                        }
                        if(sum==0&&z[x2][y2]>=0)
                        return true;
                    }else for(int i=(y1-1);i>y2;i--){
                            sum+=z[x2][i];
                            
                        }
                        if(sum==0&&z[x2][y2]>=0)
                        return true;
            }
        }else if(value==8){
            if(x2==(x1+2)&&y2==(y1+1)){
                if(z[x2][y2]<=0)
                return true;
            }if(x2==(x1+2)&&y2==(y1-1)){
                if(z[x2][y2]<=0)
                return true;
            }if(x2==(x1+1)&&y2==(y1+2)){
                if(z[x2][y2]<=0)
                return true;
            }if(x2==(x1+1)&&y2==(y1-2)){
                if(z[x2][y2]<=0)
                return true;
            }if(x2==(x1-2)&&y2==(y1+1)){
                if(z[x2][y2]<=0)
                return true;
            }if(x2==(x1-2)&&y2==(y1-1)){
                if(z[x2][y2]<=0)
                return true;
            }if(x2==(x1-1)&&y2==(y1+2)){
                if(z[x2][y2]<=0)
                return true;
            }if(x2==(x1-1)&&y2==(y1-2)){
                if(z[x2][y2]<=0)
                return true;
            }
        }else if(value==-8){
            if(x2==(x1+2)&&y2==(y1+1)){
                if(z[x2][y2]>=0)
                return true;
            }if(x2==(x1+2)&&y2==(y1-1)){
                if(z[x2][y2]>=0)
                return true;
            }if(x2==(x1+1)&&y2==(y1+2)){
                if(z[x2][y2]>=0)
                return true;
            }if(x2==(x1+1)&&y2==(y1-2)){
                if(z[x2][y2]>=0)
                return true;
            }if(x2==(x1-2)&&y2==(y1+1)){
                if(z[x2][y2]>=0)
                return true;
            }if(x2==(x1-2)&&y2==(y1-1)){
                if(z[x2][y2]>=0)
                return true;
            }if(x2==(x1-1)&&y2==(y1+2)){
                if(z[x2][y2]>=0)
                return true;
            }if(x2==(x1-1)&&y2==(y1-2)){
                if(z[x2][y2]>=0)
                return true;
            }
        }if(value==6){
            int sum=0;
            if((x2-x1)==(y2-y1)){
            if(x1<x2){
                for(int i=(x1+1);i < x2;i++){
                    sum+=z[i][i];
                   
                }
            }else for(int i=(x1-1);i > x2;i--){
                    sum+=z[i][i];
                                   }
             if(sum==0&&z[x2][y2]<=0)
                    return true; 
        }else if((x2-x1)==(y1-y2)){
            sum=-6;
               
            if(x1<x2){
                  
               int i=y1;
              while(x1!=x2){
                    
                    sum+=z[x1][i];
                    x1++;i--;
                    
                 
                }
               if(sum==0&&z[x2][y2]<=0)
                    return true; 
               }else 
                   
                   
                  
                
            if(x2<x1){ 
                    
                   int i=y1;
                   while(x1!=x2){
                     sum+=z[x1][i];
                     x1--;i++;
                     
                  }
                }
                 if(sum==0&&z[x2][y2]<=0)
                    return true;   
           }
        }
        else if(value==-6){
             int sum=0;
            if((x2-x1)==(y2-y1)){
            if(x1<x2){
                for(int i=(x1+1);i < x2;i++){
                    sum+=z[i][i];
                    
                }
            }else for(int i=(x1-1);i > x2;i--){
                    sum+=z[i][i];
                    
                }
             if(sum==0&&z[x2][y2]>=0)
                    return true; 
        }else if((x2-x1)==(y1-y2)){
            sum=6;
               
            if(x1<x2){
                  
               int i=y1;
              while(x1!=x2){
                    
                    sum+=z[x1][i];
                    x1++;i--;
                   
                 
                }
               if(sum==0&&z[x2][y2]>=0)
                    return true; 
               }else 
                   
                   
                  
                
            if(x2<x1){ 
                    
                   int i=y1;
                   while(x1!=x2){
                     sum+=z[x1][i];
                     x1--;i++;
                    
                  }
                }
                 if(sum==0&&z[x2][y2]>=0)
                    return true;   
           }
        }else if (value==20){
            int sum=0;
            if(y1==y2){
                    if(x1<x2){
                        for(int i=(x1+1);i<x2;i++){
                            sum+=z[i][y2];
                          
                        }
                        if(sum==0&&z[x2][y2]<=0)
                        return true;
                    }else for(int i=(x1-1);i>x2;i--){
                            sum+=z[i][y2];
                           
                        }
                        if(sum==0&&z[x2][y2]<=0)
                        return true;
                }else   if(x1==x2){
                       if(y1<y2){
                        for(int i=(y1+1);i<y2;i++){
                            sum+=z[x1][i];
                            
                        }
                        if(sum==0&&z[x2][y2]<=0)
                        return true;
                    }else for(int i=(y1-1);i>y2;i--){
                            sum+=z[x2][i];
                            
                        }
                        if(sum==0&&z[x2][y2]<=0)
                        return true;
            }else  if((x2-x1)==(y2-y1)){
                sum=0;
            if(x1<x2){
                for(int i=(x1+1);i < x2;i++){
                    sum+=z[i][i];
                   
                }
            }else for(int i=(x1-1);i > x2;i--){
                    sum+=z[i][i];
                                   }
             if(sum==0&&z[x2][y2]<=0)
                    return true; 
        }else if((x2-x1)==(y1-y2)){
            sum=-20;
               
            if(x1<x2){
                  
               int i=y1;
              while(x1!=x2){
                    
                    sum+=z[x1][i];
                    x1++;i--;
                    
                 
                }
               if(sum==0&&z[x2][y2]<=0)
                    return true; 
               }else 
                   
            if(x2<x1){ 
                    
                   int i=y1;
                   while(x1!=x2){
                     sum+=z[x1][i];
                     x1--;i++;
                     
                  }
                }
                 if(sum==0&&z[x2][y2]<=0)
                    return true;   
           }
        }else if (value==-20){
            int sum=0;
            if(y1==y2){
                    if(x1<x2){
                        for(int i=(x1+1);i<x2;i++){
                            sum+=z[i][y2];
                        }
                        if(sum==0&&z[x2][y2]>=0)
                        return true;
                    }else for(int i=(x1-1);i>x2;i--){
                            sum+=z[i][y2];
                            
                        }
                        if(sum==0&&z[x2][y2]>=0)
                        return true;
                }else   if(x1==x2){
                       if(y1<y2){
                        for(int i=(y1+1);i<y2;i++){
                            sum+=z[x1][i];
                           
                        }
                        if(sum==0&&z[x2][y2]>=0)
                        return true;
                    }else for(int i=(y1-1);i>y2;i--){
                            sum+=z[x2][i];
                           
                        }
                        if(sum==0&&z[x2][y2]>=0)
                        return true;
            }else  if((x2-x1)==(y2-y1)){
                sum=0;
            if(x1<x2){
                for(int i=(x1+1);i < x2;i++){
                    sum+=z[i][i];
                   
                }
            }else for(int i=(x1-1);i > x2;i--){
                    sum+=z[i][i];
                                   }
             if(sum==0&&z[x2][y2]<=0)
                    return true; 
        }else if((x2-x1)==(y1-y2)){
            sum=20;
               
            if(x1<x2){
                  
               int i=y1;
              while(x1!=x2){
                    
                    sum+=z[x1][i];
                    x1++;i--;
                    
                 
                }
               if(sum==0&&z[x2][y2]<=0)
                    return true; 
               }else 
                   
            if(x2<x1){ 
                    
                   int i=y1;
                   while(x1!=x2){
                     sum+=z[x1][i];
                     x1--;i++;
                     
                  }
                }
                 if(sum==0&&z[x2][y2]<=0)
                    return true;   
           }
        }else if(value==50){
            if(Math.abs(x1-x2)<=1&&Math.abs(y1-y2)<=1){
                if(z[x2][y2]<=0){
                    return true;
                }
            }
        }else if(value==-50){
            if(Math.abs(x1-x2)<=1&&Math.abs(y1-y2)<=1){
                if(z[x2][y2]>=0){
                    return true;
                }
            }
        }

            return false;
    }

    private void changeTurn() {
       if(whoseturn){
           whoseturn =false;
       }else whoseturn=true;
    }
}



