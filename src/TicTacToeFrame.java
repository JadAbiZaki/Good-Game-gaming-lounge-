/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Color;
import java.io.*;
import java.net.*;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Nader
 */
public class TicTacToeFrame extends javax.swing.JFrame{

    private String whoseTurn="X"; 
    String youAre;				//if player is X or O
    String opponent;
    boolean multiPlayer;		//if one or two players
    String gameserverID;
    public boolean yourTurn;
    public int z[][]=new int[3][3];
    public TicTacToeFrame(String youAre, boolean multiPlayer, String gameserverID2) {
    	this.youAre = youAre;
    	this.multiPlayer = multiPlayer;
        this.gameserverID = gameserverID2;					//to be used when communicating with server
        System.out.println("you are " + gameserverID + " " + gameserverID2);
        if(youAre.equals("X")){
        	yourTurn = true;
        	opponent = "O";
        }
        else{
        	yourTurn = false;
        	opponent = "X";    	
        }
        initComponents();
        setSize(600,600);
        setLocationRelativeTo(null);
        for (int i = 0; i < 3; i++){
        	for (int j = 0; j < 3; j++)
        		z[i][j] = 0;
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        theGrid = new javax.swing.JPanel();
        jPanel_1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel_2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel_3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jPanel_4 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jPanel_5 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jPanel_6 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jPanel_7 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jPanel_8 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jPanel_9 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tic Tac Toe");

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, java.awt.BorderLayout.PAGE_END);

        theGrid.setBackground(new java.awt.Color(204, 204, 204));
        theGrid.setLayout(new java.awt.GridLayout(3, 3, 1, 1));

        jPanel_1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_1.setLayout(new java.awt.BorderLayout());

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel_1.add(jButton1, java.awt.BorderLayout.CENTER);

        theGrid.add(jPanel_1);

        jPanel_2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_2.setLayout(new java.awt.BorderLayout());

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel_2.add(jButton2, java.awt.BorderLayout.CENTER);

        theGrid.add(jPanel_2);

        jPanel_3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_3.setLayout(new java.awt.BorderLayout());

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel_3.add(jButton3, java.awt.BorderLayout.CENTER);

        theGrid.add(jPanel_3);

        jPanel_4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_4.setLayout(new java.awt.BorderLayout());

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel_4.add(jButton4, java.awt.BorderLayout.CENTER);

        theGrid.add(jPanel_4);

        jPanel_5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_5.setLayout(new java.awt.BorderLayout());

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel_5.add(jButton5, java.awt.BorderLayout.CENTER);

        theGrid.add(jPanel_5);

        jPanel_6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_6.setLayout(new java.awt.BorderLayout());

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel_6.add(jButton6, java.awt.BorderLayout.CENTER);

        theGrid.add(jPanel_6);

        jPanel_7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_7.setLayout(new java.awt.BorderLayout());

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel_7.add(jButton7, java.awt.BorderLayout.CENTER);

        theGrid.add(jPanel_7);

        jPanel_8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_8.setLayout(new java.awt.BorderLayout());

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel_8.add(jButton8, java.awt.BorderLayout.CENTER);

        theGrid.add(jPanel_8);

        jPanel_9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_9.setLayout(new java.awt.BorderLayout());

        jButton9.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel_9.add(jButton9, java.awt.BorderLayout.CENTER);

        theGrid.add(jPanel_9);

        jPanel1.add(theGrid, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public void receiveMove(String x, String y){
    	int cmd = Integer.parseInt(x);
    	int cmd2 = Integer.parseInt(y);
    	if(z[cmd][cmd2] == 0){
    		if(youAre.equals("X"))
    			z[cmd][cmd2] = -1;
    		else
    			z[cmd][cmd2] = 1;
	    	if(cmd == 0 && cmd2 == 0)
	    		jButton1.setText(opponent);
	    	else if(cmd == 0 && cmd2 == 1)
	    		jButton2.setText(opponent);
	    	else if(cmd == 0 && cmd2 == 2)
	    		jButton3.setText(opponent);
	    	else if(cmd == 1 && cmd2 == 0)
	    		jButton4.setText(opponent);
	    	else if(cmd == 1 && cmd2 == 1)
	    		jButton5.setText(opponent);
	    	else if(cmd == 1 && cmd2 == 2)
	    		jButton6.setText(opponent);
	    	else if(cmd == 2 && cmd2 == 0)
	    		jButton7.setText(opponent);
	    	else if(cmd == 2 && cmd2 == 1)
	    		jButton8.setText(opponent);
	    	else if(cmd == 2 && cmd2 == 2)
	    		jButton9.setText(opponent);
    	}	
    	yourTurn = true;
    	if(isThereAWinner()==3){
        	JOptionPane.showMessageDialog(null, "X wins");
            reset();
        }
        else if(isThereAWinner()==-3){
        	JOptionPane.showMessageDialog(null, "O wins");
            reset();
        }
        else if(noZeroesAreLeft()){
        	JOptionPane.showMessageDialog(null, "Draw");
            reset();
        }
    		
    }
    private void sendToServer(int x, int y){
		String posx = Integer.toString(x);
		String posy = Integer.toString(y);
		try {System.out.println("ID is " + gameserverID);
			MyFrame.dataout.writeBytes("TTT " + gameserverID + " " + MyFrame.currentUser + " " + posx + " " + posy + "\n");
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
    private void determineWhoseTurn(){
        if(whoseTurn.equalsIgnoreCase("X")){
            whoseTurn="O";
        }else whoseTurn="X";
    }

    private void reset(){
        jButton1.setText("");
        jButton2.setText("");
        jButton3.setText("");
        jButton4.setText("");
        jButton5.setText("");
        jButton6.setText("");
        jButton7.setText("");
        jButton8.setText("");
        jButton9.setText("");
        for(int i=0;i<3;i++)
            for(int j=0;j<3;j++){
                z[i][j]=0;
            }
    }
    private boolean noZeroesAreLeft(){
         for(int i=0;i<3;i++)
            for(int j=0;j<3;j++){
                if(z[i][j]==0){
                    return false;
                }
            }
         return true;
    }
    private int isThereAWinner(){
        for(int i=0 ; i < 3 ; i++){
            int sum=0;
            for(int j=0 ; j < 3 ; j++){
                sum+=z[i][j];
            }
            if(sum==3){
                return 3;
            }
            if(sum==-3){
                return -3;
            }
        }
          for(int i=0 ; i < 3 ; i++){
            int sum=0;
            for(int j=0 ; j < 3 ; j++){
                sum+=z[j][i];
            }
            if(sum==3){
                return 3;
            }
            if(sum==-3){
                return -3;
            }
        }
          int sum=0;
          sum=z[0][0]+z[1][1]+z[2][2];
          if(sum==3){
                return 3;
           } else if(sum==-3){
                return -3;
           }else{
          sum=0;    
          sum=z[0][2]+z[1][1]+z[2][0];
          if(sum==3){
                return 3;
            }
          else if(sum==-3){
                return -3;
            }else
            return 0;
           }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicTacToeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicTacToeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicTacToeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicTacToeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TicTacToeFrame frame = new TicTacToeFrame("X", false, null);
                frame.setVisible(true);
                
            }
        });
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         if(z[0][0]==0 && yourTurn){/*
             jButton1.setForeground(Color.red);
         jButton1.setText("X");
         z[0][0]=1;
         sendToServer(0,0);
         }*/
        if(youAre.equals("X"))
        	z[0][0]=1;
        else
        	z[0][0] = -1;
        jButton1.setForeground(Color.red);
        jButton1.setText(youAre);
        yourTurn = !yourTurn;
         if(!multiPlayer){
        	if(AIMove(0,0)==0)
            AIMove2();
         }
        else if(multiPlayer){
        		this.sendToServer(0, 0);
        		if(isThereAWinner()==3){
                	JOptionPane.showMessageDialog(null, "X wins");
                	Client.TTTwinner("X", gameserverID);
                    reset();
                }
                else if(isThereAWinner()==-3){
                	JOptionPane.showMessageDialog(null, "O wins");
                	Client.TTTwinner("O", gameserverID);
                    reset();
                }
                else if(noZeroesAreLeft()){
                	JOptionPane.showMessageDialog(null, "Draw");
                	Client.TTTwinner("draw", gameserverID);
                    reset();
                }
        }
         }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       if(z[0][1]==0 && yourTurn){ /*
         jButton2.setForeground(Color.red);
         jButton2.setText("X");
         z[0][1]=1;
         sendToServer(0,1);*/
       
        jButton2.setForeground(Color.red);
        if(youAre.equals("X"))
        	z[0][1]=1;
        else
        	z[0][1] = -1;
        jButton2.setText(youAre);
        yourTurn = !yourTurn;
        if(!multiPlayer){
       	if(AIMove(0,1)==0)
           AIMove2();
        }
       else if(multiPlayer){
       		this.sendToServer(0, 1);
       		if(isThereAWinner()==3){
               	JOptionPane.showMessageDialog(null, "X wins");
               	Client.TTTwinner("X", gameserverID);
                   reset();
               }
               else if(isThereAWinner()==-3){
               	JOptionPane.showMessageDialog(null, "O wins");
               	Client.TTTwinner("O", gameserverID);
                   reset();
               }
               else if(noZeroesAreLeft()){
               	JOptionPane.showMessageDialog(null, "Draw");
               	Client.TTTwinner("draw", gameserverID);
                   reset();
               }
       }
        
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       if(z[0][2]==0 && yourTurn){/*
        jButton3.setForeground(Color.red);
        jButton3.setText("X");
        z[0][2]=1;
        sendToServer(0,2);*/
      
           jButton3.setForeground(Color.red);
           if(youAre.equals("X"))
           	z[0][2]=1;
           else
           	z[0][2] = -1;
       
        jButton3.setText(youAre);
        yourTurn = !yourTurn;
        if(!multiPlayer){
       	if(AIMove(0,2)==0)
           AIMove2();
        }
       else if(multiPlayer){
       		this.sendToServer(0, 2);
       		if(isThereAWinner()==3){
               	JOptionPane.showMessageDialog(null, "X wins");
               	Client.TTTwinner("X", gameserverID);
                   reset();
               }
               else if(isThereAWinner()==-3){
               	JOptionPane.showMessageDialog(null, "O wins");
               	Client.TTTwinner("O", gameserverID);
                   reset();
               }
               else if(noZeroesAreLeft()){
               	JOptionPane.showMessageDialog(null, "Draw");
               	Client.TTTwinner("draw", gameserverID);
                   reset();
               }
       }
       }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       if(z[1][0]==0 && yourTurn){ /*
         jButton4.setForeground(Color.red);
         jButton4.setText("X");
         z[1][0]=1;
         sendToServer(1,0);*/
  
           jButton4.setForeground(Color.red);
           if(youAre.equals("X"))
           	z[1][0]=1;
           else
           	z[1][0] = -1;
            jButton4.setText(youAre);
            yourTurn = !yourTurn;
            if(!multiPlayer){
            	if(AIMove(1,0)==0)
                AIMove2();
             }
            else if(multiPlayer){
            		this.sendToServer(1, 0);
            		if(isThereAWinner()==3){
                    	JOptionPane.showMessageDialog(null, "X wins");
                    	Client.TTTwinner("X", gameserverID);
                        reset();
                    }
                    else if(isThereAWinner()==-3){
                    	JOptionPane.showMessageDialog(null, "O wins");
                    	Client.TTTwinner("O", gameserverID);
                        reset();
                    }
                    else if(noZeroesAreLeft()){
                    	JOptionPane.showMessageDialog(null, "Draw");
                    	Client.TTTwinner("O", gameserverID);
                        reset();
                    }
            }
       }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
      if(z[1][1]==0 && yourTurn){/*
         jButton5.setForeground(Color.red);
         jButton5.setText("X");
         z[1][1]=1;
         sendToServer(1,1);*/
        jButton5.setForeground(Color.red);
        if(youAre.equals("X"))
        	z[1][1]=1;
        else
        	z[1][1] = -1;
        jButton5.setText(youAre);
        yourTurn = !yourTurn;
        if(!multiPlayer){
       	if(AIMove(1,1)==0)
           AIMove2();
        }
       else if(multiPlayer){
       		this.sendToServer(1, 1);
       		if(isThereAWinner()==3){
               	JOptionPane.showMessageDialog(null, "X wins");
               	Client.TTTwinner("X", gameserverID);
                   reset();
               }
               else if(isThereAWinner()==-3){
               	JOptionPane.showMessageDialog(null, "O wins");
               	Client.TTTwinner("O", gameserverID);
                   reset();
               }
               else if(noZeroesAreLeft()){
               	JOptionPane.showMessageDialog(null, "Draw");
               	Client.TTTwinner("draw", gameserverID);
                   reset();
               }
       }
      }
      
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       if(z[1][2]==0 && yourTurn){ 
         /*jButton6.setForeground(Color.red);
         jButton6.setText("X");
         z[1][2]=1;
         sendToServer(1,2);*/
         
       
        jButton6.setForeground(Color.red);

        if(youAre.equals("X"))
        	z[1][2]=1;
        else
        	z[1][2] = -1;
        jButton6.setText(youAre);
        yourTurn = !yourTurn;
        if(!multiPlayer){
       	if(AIMove(1,2)==0)
           AIMove2();
        }
       else if(multiPlayer){
       		this.sendToServer(1, 2);
       		if(isThereAWinner()==3){
               	JOptionPane.showMessageDialog(null, "X wins");
               	Client.TTTwinner("X", gameserverID);
                   reset();
               }
               else if(isThereAWinner()==-3){
               	JOptionPane.showMessageDialog(null, "O wins");
               	Client.TTTwinner("O", gameserverID);
                   reset();
               }
               else if(noZeroesAreLeft()){
               	JOptionPane.showMessageDialog(null, "Draw");
               	Client.TTTwinner("draw", gameserverID);
                   reset();
               }
       }
        }
// TODO add your handling code here:
       
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
      if(z[2][0]==0 && yourTurn){
          /*jButton7.setForeground(Color.red);
         jButton7.setText("X");
         z[2][0]=1;
         sendToServer(2,0);*/
         
         
        jButton7.setForeground(Color.red);
        if(youAre.equals("X"))
        	z[2][0]=1;
        else
        	z[2][0] = -1;
        jButton7.setText(youAre);
        yourTurn = !yourTurn;
        
             if(!multiPlayer){
             	if(AIMove(2,0)==0)
                 AIMove2();
              }
             else if(multiPlayer){
             		this.sendToServer(2, 0);
             		if(isThereAWinner()==3){
                     	JOptionPane.showMessageDialog(null, "X wins");
                     	Client.TTTwinner("X", gameserverID);
                         reset();
                     }
                     else if(isThereAWinner()==-3){
                     	JOptionPane.showMessageDialog(null, "O wins");
                     	Client.TTTwinner("O", gameserverID);
                         reset();
                     }
                     else if(noZeroesAreLeft()){
                     	JOptionPane.showMessageDialog(null, "Draw");
                     	Client.TTTwinner("draw", gameserverID);
                         reset();
                     }
             }
         
      }
      
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
       if(z[2][1]==0 && yourTurn){
          /*jButton8.setForeground(Color.red);
         jButton8.setText("X");
         z[2][1]=1;
         sendToServer(2,1);*/
         
       
         
           jButton8.setForeground(Color.red);
           if(youAre.equals("X"))
           	z[2][1]=1;
           else
           	z[2][1] = -1;
       
        jButton8.setText(youAre);
        yourTurn = !yourTurn;
        if(!multiPlayer){
       	if(AIMove(2,1)==0)
           AIMove2();
        }
       else if(multiPlayer){
       		this.sendToServer(2, 1);
       		if(isThereAWinner()==3){
               	JOptionPane.showMessageDialog(null, "X wins");
               	Client.TTTwinner("X", gameserverID);
                   reset();
               }
               else if(isThereAWinner()==-3){
               	JOptionPane.showMessageDialog(null, "O wins");
               	Client.TTTwinner("O", gameserverID);
                   reset();
               }
               else if(noZeroesAreLeft()){
               	JOptionPane.showMessageDialog(null, "Draw");
               	Client.TTTwinner("draw", gameserverID);
                   reset();
               }
       }
       }
         
       
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
       if(z[2][2]==0 && yourTurn){ /*jButton9.setForeground(Color.red);
         jButton9.setText("X");
         z[2][2]=1;
         sendToServer(2,2);*/
       
           jButton9.setForeground(Color.red);
           if(youAre.equals("X"))
           	z[2][2]=1;
           else
           	z[2][2] = -1;
        
           jButton9.setText(youAre);
           yourTurn = !yourTurn;
           if(!multiPlayer){
           	if(AIMove(2,2)==0)
               AIMove2();
            }
           else if(multiPlayer){
           		this.sendToServer(2, 2);
           		if(isThereAWinner()==3){
                   	JOptionPane.showMessageDialog(null, "X wins");
                   	Client.TTTwinner("X", gameserverID);
                       reset();
                   }
                   else if(isThereAWinner()==-3){
                   	JOptionPane.showMessageDialog(null, "O wins");
                   	Client.TTTwinner("O", gameserverID);
                       reset();
                   }
                   else if(noZeroesAreLeft()){
                   	JOptionPane.showMessageDialog(null, "Draw");
                   	Client.TTTwinner("draw", gameserverID);
                       reset();
                   }
           }
        }
       
    }//GEN-LAST:event_jButton9ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_1;
    private javax.swing.JPanel jPanel_2;
    private javax.swing.JPanel jPanel_3;
    private javax.swing.JPanel jPanel_4;
    private javax.swing.JPanel jPanel_5;
    private javax.swing.JPanel jPanel_6;
    private javax.swing.JPanel jPanel_7;
    private javax.swing.JPanel jPanel_8;
    private javax.swing.JPanel jPanel_9;
    private javax.swing.JPanel theGrid;
    // End of variables declaration//GEN-END:variables

    private int AIMove(int x,int y) {
            if(z[1][1]==0){
                jButton5.setForeground(Color.blue);
                jButton5.setText("O");
                z[1][1]=-1;
                return 1;
          } //
            //
            //
            else if(x==0&&y==0){
              if((z[0][0]+z[0][1])==2){
                  z[0][2]=-1;
                  jButton3.setForeground(Color.blue);
                  jButton3.setText("O");
                   return 1;
              }else if((z[0][0]+z[0][2])==2){
                  z[0][1]=-1;
                  jButton2.setForeground(Color.blue);
                  jButton2.setText("O");
                   return 1;
              }else if((z[0][0]+z[1][0])==2){
                  z[2][0]=-1;
                  jButton7.setForeground(Color.blue);
                  jButton7.setText("O"); return 1;
              }else if((z[0][0]+z[2][0])==2){
                  z[1][0]=-1;
                  jButton4.setForeground(Color.blue);
                  jButton4.setText("O"); return 1;
              }else if((z[0][0]+z[1][1])==2){
                  z[2][2]=-1;
                  jButton9.setForeground(Color.blue);
                  jButton9.setText("O"); return 1;
              }else if((z[0][0]+z[2][2])==2){
                  z[1][1]=-1;
                  jButton5.setForeground(Color.blue);
                  jButton5.setText("O"); return 1;
              }
    }//
     //
     //
          else if(x==0&&y==1){
        if((z[0][1]+z[0][0])==2){
            z[0][2]=-1;
            jButton3.setForeground(Color.blue);
            jButton3.setText("O"); return 1;
        }else if((z[0][1]+z[0][2])==2){
            z[0][0]=-1;
            jButton1.setForeground(Color.blue);
            jButton1.setText("O"); return 1;
        }else if((z[0][1]+z[1][1])==2){
            z[2][1]=-1;
            jButton8.setForeground(Color.blue);
            jButton8.setText("O"); return 1;
        }else if((z[0][1]+z[2][1])==2){
            z[1][1]=-1;
            jButton5.setForeground(Color.blue);
            jButton5.setText("O"); return 1;
        }
    }//
    //
    //
    else if(x==0&&y==2){
        if((z[0][2]+z[0][1])==2){
                  z[0][0]=-1;
                  jButton1.setForeground(Color.blue);
                  jButton1.setText("O"); return 1;
              }else if((z[0][0]+z[0][2])==2){
                  z[0][1]=-1;
                  jButton2.setForeground(Color.blue);
                  jButton2.setText("O"); return 1;
              }else if((z[0][2]+z[1][2])==2){
                  z[2][2]=-1;
                  jButton9.setForeground(Color.blue);
                  jButton9.setText("O"); return 1;
              }else if((z[0][2]+z[2][2])==2){
                  z[1][2]=-1;
                  jButton6.setForeground(Color.blue);
                  jButton6.setText("O"); return 1;
              }else if((z[0][2]+z[1][1])==2){
                  z[2][0]=-1;
                  jButton7.setForeground(Color.blue);
                  jButton7.setText("O"); return 1;
              }else if((z[0][2]+z[2][0])==2){
                  z[1][1]=-1;
                  jButton5.setForeground(Color.blue);
                  jButton5.setText("O"); return 1;
              }
    }//
    //
    //
    else if(x==1&&y==0){
        if((z[1][0]+z[0][0])==2){
            z[2][0]=-1;
            jButton7.setForeground(Color.blue);
            jButton7.setText("O"); return 1;
        }else if((z[0][1]+z[2][0])==2){
            z[0][0]=-1;
            jButton1.setForeground(Color.blue);
            jButton1.setText("O"); return 1;
        }else if((z[1][0]+z[1][1])==2){
            z[1][2]=-1;
            jButton6.setForeground(Color.blue);
            jButton6.setText("O"); return 1;
        }else if((z[1][0]+z[1][2])==2){
            z[1][1]=-1;
            jButton5.setForeground(Color.blue);
            jButton5.setText("O"); return 1;
        }
    }//
    //
    //
    else if(x==2&&y==0){
        if((z[2][0]+z[1][0])==2){
                  z[0][0]=-1;
                  jButton1.setForeground(Color.blue);
                  jButton1.setText("O"); return 1;
              }else if((z[2][0]+z[0][0])==2){
                  z[1][0]=-1;
                  jButton4.setForeground(Color.blue);
                  jButton4.setText("O"); return 1;
              }else if((z[2][0]+z[2][1])==2){
                  z[2][2]=-1;
                  jButton9.setForeground(Color.blue);
                  jButton9.setText("O"); return 1;
              }else if((z[2][0]+z[2][2])==2){
                  z[2][1]=-1;
                  jButton8.setForeground(Color.blue);
                  jButton8.setText("O"); return 1;
              }else if((z[2][0]+z[1][1])==2){
                  z[0][2]=-1;
                  jButton3.setForeground(Color.blue);
                  jButton3.setText("O"); return 1;
              }else if((z[0][2]+z[2][0])==2){
                  z[1][1]=-1;
                  jButton5.setForeground(Color.blue);
                  jButton5.setText("O"); return 1;
              }
    }//
    //
    //
    else if(x==2&&y==1){
        if((z[2][1]+z[2][2])==2){
            z[2][0]=-1;
            jButton7.setForeground(Color.blue);
            jButton7.setText("O"); return 1;
        }else if((z[2][1]+z[2][0])==2){
            z[2][2]=-1;
            jButton9.setForeground(Color.blue);
            jButton9.setText("O"); return 1;
        }else if((z[2][1]+z[1][1])==2){
            z[0][1]=-1;
            jButton2.setForeground(Color.blue);
            jButton2.setText("O"); return 1;
        }else if((z[2][1]+z[0][1])==2){
            z[1][1]=-1;
            jButton5.setForeground(Color.blue);
            jButton5.setText("O"); return 1;
        }
    }
    //
    //
    //
        else if(x==2&&y==2){
        if((z[2][2]+z[1][1])==2){
                  z[0][0]=-1;
                  jButton1.setForeground(Color.blue);
                  jButton1.setText("O"); return 1;
              }else if((z[2][2]+z[0][0])==2){
                  z[1][1]=-1;
                  jButton5.setForeground(Color.blue);
                  jButton5.setText("O"); return 1;
              }else if((z[2][2]+z[2][1])==2){
                  z[2][0]=-1;
                  jButton7.setForeground(Color.blue);
                  jButton7.setText("O"); return 1;
              }else if((z[2][0]+z[2][2])==2){
                  z[2][1]=-1;
                  jButton8.setForeground(Color.blue);
                  jButton8.setText("O"); return 1;
              }else if((z[2][2]+z[1][2])==2){
                  z[0][2]=-1;
                  jButton3.setForeground(Color.blue);
                  jButton3.setText("O"); return 1;
              }else if((z[0][2]+z[2][2])==2){
                  z[1][2]=-1;
                  jButton6.setForeground(Color.blue);
                  jButton6.setText("O"); return 1;
              }
    }
    //
    //
    //
    else if(x==1&&y==2){
        if((z[1][2]+z[1][1])==2){
                  z[1][0]=-1;
                  jButton4.setForeground(Color.blue);
                  jButton4.setText("O"); return 1;
              }else if((z[2][2]+z[1][2])==2){
                  z[0][2]=-1;
                  jButton3.setForeground(Color.blue);
                  jButton3.setText("O"); return 1;
              }else if((z[1][2]+z[1][0])==2){
                  z[1][1]=-1;
                  jButton5.setForeground(Color.blue);
                  jButton5.setText("O"); return 1;
              }else if((z[1][2]+z[0][2])==2){
                  z[2][2]=-1;
                  jButton9.setForeground(Color.blue);
                  jButton9.setText("O"); return 1;
              }
    }
    //
    //
    //
              else if(x==1&&y==1)
    {
        if(z[0][0]==0){
         z[0][0]=-1;
         jButton1.setForeground(Color.blue);
         jButton1.setText("O"); return 1;
    }else if(z[2][2]==0){
        z[2][2]=-1;
         jButton9.setForeground(Color.blue);
         jButton9.setText("O"); return 1;
    }else if(z[0][2]==0){
        z[0][2]=-1;
         jButton3.setForeground(Color.blue);
         jButton3.setText("O"); return 1;
    }else if(z[2][0]==0){
        z[2][0]=-1;
         jButton7.setForeground(Color.blue);
         jButton7.setText("O"); return 1;
    }
}
    return 0;

    }

    private void AIMove2() {
        if(z[0][0]==0){
         z[0][0]=-1;
         jButton1.setForeground(Color.blue);
         jButton1.setText("O");
    }else if(z[2][2]==0){
        z[2][2]=-1;
         jButton9.setForeground(Color.blue);
         jButton9.setText("O");
    }else if(z[0][2]==0){
        z[0][2]=-1;
         jButton3.setForeground(Color.blue);
         jButton3.setText("O");
    }else if(z[2][0]==0){
        z[2][0]=-1;
         jButton7.setForeground(Color.blue);
         jButton7.setText("O");
    }
    }
}


